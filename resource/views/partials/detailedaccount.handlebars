<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Clicker+Script&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
        integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    {{!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unpkg.com/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <script src="https://unpkg.com/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"> --}}
    <!-- Xóa các import trùng lặp và chỉ giữ lại bộ import này -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- link css -->
    <link rel="stylesheet" href="/css/style.css">
    <!-- script -->
    <script src="/js/scripts.js"></script>
    <link rel="shortcut icon" href="/icon/logo-removeBg.png" type="image/x-icon">
    <script src="https://kit.fontawesome.com/01acedffd5.js" crossorigin="anonymous"></script>

</head>

<body>


    <div class="main-container" style="padding-top:70px;padding-bottom:1000px">
    <div class="profile-container-homecare" style="z-index:99999;">
        <div class="profile-dropdown-homecare">
            <button class="dropdown-btn-homecare">
                {{!-- <img src="https://via.placeholder.com/40" alt="Profile" class="profile-img-homecare"> --}}
                <span class="profile-name-homecare">{{user.fullName}}</span>
                <i class="fas fa-chevron-down"></i>
            </button>
            <div class="dropdown-content-homecare">
                <div class="dropdown-item-homecare" data-modal="profile">
                    <i class="fas fa-user"></i>
                    Thông tin
                </div>
                <div class="dropdown-item-homecare" data-modal="settings">
                    <i class="fas fa-cog"></i>
                   Cài đặt
                </div>
                <div class="dropdown-item-homecare" data-modal="messages">
                    <i class="fas fa-envelope"></i>
                    Tin nhắn
                </div>
                <div class="dropdown-item-homecare" data-modal="help">
                    <i class="fas fa-question-circle"></i>
                    Trợ giúp
                </div>
                <div class="dropdown-item-homecare" data-modal="logout">
                    <a href="/account/logout">
                    <i class="fas fa-sign-out-alt"></i>
                    Thoát
                    </a>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Modals -->
    <div class="modal-homecare" id="profile-modal-homecare"  style="z-index:99999;">
        <div class="container-input-form">
            <form id="userForm-input-form" action="/account/update" method="post">
                <h2 class="title-input-form">Thông tin khách hàng</h2>
                <div class="form-group-input-form">
                    <label class="label-input-form" for="phone">Số điện thoại</label>
                    <input class="input-form-accountdetail" type="tel" id="phone" name="phone" value="{{user.phone}}" pattern="[0-9]+" disabled
                        required>
                </div>
                <div class="form-group-input-form">
                    <label class="label-input-form" for="name">Họ và tên</label>
                    <input class="input-form-accountdetail" type="text" id="name"  name="name" value="{{user.fullName}}" disabled required>
                </div>
                <div class="form-group-input-form">
                    <label class="label-input-form" for="address">Địa chỉ</label>
                    <input class="input-form-accountdetail" type="text" id="address" name="address" value="{{user.address}}" disabled required>
                </div>
                <div class="button-group-input-form">
                    <button type="button" id="editBtn" class="btn-homedetail edit">chỉnh sửa thông tin</button>
                    <button type="button" id="saveBtn" class="btn-homedetail save" disabled>Lưu thay đổi</button>
                </div>
            </form>
        </div>
    </div>
    
    <div class="modal-homecare" id="settings-modal-homecare"  style="z-index:99999;">
        <div class="modal-content-homecare">
            <span class="close-btn-homecare">&times;</span>
            <h2 class="modal-title-homecare"><i class="fas fa-cog"></i> Cài đặt</h2>
            <p class="modal-text-homecare">Cài đặt đang hoạt động</p>
        </div>
    </div>
    
    <div class="modal-homecare" id="messages-modal-homecare"  style="z-index:99999;">
        <div class="modal-content-homecare">
            <span class="close-btn-homecare">&times;</span>
            <h2 class="modal-title-homecare"><i class="fas fa-envelope"></i> Tin nhắn</h2>
            <p class="modal-text-homecare">Tin nhắn của bạn sẽ xuất hiện ở đây.</p>
        </div>
    </div>
    
    <div class="modal-homecare" id="help-modal-homecare"  style="z-index:99999;">
        <div class="modal-content-homecare">
            <span class="close-btn-homecare">&times;</span>
            <h2 class="modal-title-homecare"><i class="fas fa-question-circle"></i> Trở giúp</h2>
            <p class="modal-text-homecare">Trợ giúp và hỗ trợ khách Hàng ở đây.</p>
        </div>
    </div>
    
    <div class="modal-homecare" id="logout-modal-homecare"  style="z-index:99999;">
        <div class="modal-content-homecare">
            <span class="close-btn-homecare">&times;</span>
            <h2 class="modal-title-homecare"><i class="fas fa-sign-out-alt"></i> Thoát</h2>
            <p class="modal-text-homecare">bạn có chắc chắn muốn thoát ra ngoài?</p>
            <button class="logout-btn-homecare">Xác nhận</button>
        </div>
    </div>
        {{!-- aside start --}}
        <div class="aside">
            <div class="aside__nav-toggle">
                <span></span>
            </div>
                <div class="aside__logo">
                    <a href="/">
                        <div class="logo">
                            <img src="/icon/logo-removeBg.png" alt="grocerymart" class="logo__img-helper logo __img-header">
                        </div>
                    </a>
                </div>
                <ul class="aside__nav">
                    <li class="aside__item">
                        <a href="/">
                            <i class="fa-brands fa-hire-a-helper"></i>Đặt đơn
                        </a>
                    </li>
                    <li class="aside__item">
                        <a  href="#service-detail" class="aside__nav-active">
                            <i class="fa fa-user"></i>Lịnh sử yêu cầu
                        </a>
                    </li>
                    
                </ul>
        </div>
        {{!-- aside end --}}
        {{!-- main content start --}}
        <div class="main-content">
            {{!-- home section start --}}
            {{!-- <section class="home home-active section" id="home">
                <div class="home__container-2" style="display:flex;align
                content:center;justify-content:center;">
                 
                    <div class="container-input-form">
                        <form id="userForm-input-form">
                            <h2 class="title-input-form">Thông tin khách hàng</h2>
                            <div class="form-group-input-form">
                                <label class="label-input-form" for="phone">Số điện thoại</label>
                                <input class="input-form-accountdetail" type="tel" id="phone" name="phone" pattern="[0-9]+" disabled
                                    required>
                            </div>
                            <div class="form-group-input-form">
                                <label class="label-input-form" for="name">Họ và tên</label>
                                <input class="input-form-accountdetail" type="text" id="name" name="name" disabled required>
                            </div>
                            <div class="form-group-input-form">
                                <label class="label-input-form" for="address">Địa chỉ</label>
                                <input class="input-form-accountdetail" type="text" id="address" name="address" disabled required>
                            </div>
                            <div class="button-group-input-form">
                                <button type="button" id="editBtn" class="btn-homedetail edit">chỉnh sửa thông tin</button>
                                <button type="button" id="saveBtn" class="btn-homedetail save" disabled>Lưu thay đổi</button>
                            </div>
                        </form>
                    </div>
                    
                </div>
            </section> --}}
            {{!-- home section end --}}
            {{!-- about section start --}}
            <section class="about-detail section" id="service-detail">
                <div class="home__container-2">
                    <div class="container-homedetail">
                        <div class="table-section-homedetail">
                            <h2 class="title-homedetail">Dài hạn</h2>
                            <div class="table-container-homedetail">
                                <table class="modern-table-homedetail">
                                    <thead>
                                        <tr>
                                            <th>Ngày Yêu cầu</th>
                                            <th>Loại Đơn</th>
                                            <th>Giá Chuẩn</th>
                                            <th>Giờ bắt đầu</th>
                                            <th>Giờ kết thúc</th>
                                            <th>Trạng Thái</th>
                                        </tr>
                                    </thead>
                                    <tbody id="longTermTable-homedetail">
                                        {{#each longTermRequests}}
                                        <tr>
                                            <td>{{orderDate}}</td>
                                            <td>{{requestType}}</td>
                                            <td>{{totalCost}}</td>
                                            <td>{{#formatTime startTime }}{{/formatTime}}</td>
                                            <td>{{#formatTime endTime }}{{/formatTime}}</td>        
                                            <td>
                                                {{!-- <p class="status-detail cancel">{{status}}</p> --}}
                                                <button class="btnHistoryDetailHomeKare" data-id="{{@index}}"  onclick="showBillType(this,'long')" aria-label="View Long Term Bill Details">Chi tiết</button>
                                                    <!-- Long Term Modal -->
                                                    <div class="modalHistoryDetailHomeKare" id="longTermModalHistoryDetailHomeKare">
                                                        <div class="modalContentHistoryDetailHomeKare">
                                                            <span class="closeModalHistoryDetailHomeKare"
                                                                onclick="closeModal('longTermModalHistoryDetailHomeKare')">&times;</span>
                                                            <div class="modalHeaderHistoryDetailHomeKare">
                                                                <h2 class="modalTitleHistoryDetailHomeKare">Chi tiết hóa đơn dài hạn</h2>
                                                            </div>
                                                            <div class="longTermContainerHistoryDetailHomeKare" id ="{{this.schedules.length}}">
                                                                {{#each this.schedules}}
                                                                <div class="dayBillHistoryDetailHomeKare">
                                                                    <h3 class="dayTitleHistoryDetailHomeKare">{{#showdate workingDate}}{{/showdate}}</h3>
                                                                    <div class="billDetailsHistoryDetailHomeKare">
                                                                        <div class="detailItemHistoryDetailHomeKare">
                                                                            <span class="labelHistoryDetailHomeKare">Giờ bắt đầu</span>
                                                                            <span class="valueHistoryDetailHomeKare">{{#formatTime startTime}}{{/formatTime}}</span>
                                                                        </div>
                                                                        <div class="detailItemHistoryDetailHomeKare">
                                                                            <span class="labelHistoryDetailHomeKare">Giờ kết thúc</span>
                                                                            <span class="valueHistoryDetailHomeKare">{{#formatTime endTime}}{{/formatTime}}</span>
                                                                        </div>
                                                                        <div class="detailItemHistoryDetailHomeKare">
                                                                            <span class="labelHistoryDetailHomeKare">Trạng thái:</span>
                                                                            <span class="valueHistoryDetailHomeKare status-completeHistoryDetailHomeKare">{{#getStatus status}}{{/getStatus}}</span>
                                                                        </div>
                                                                        <div class="detailItemHistoryDetailHomeKare">
                                                                            <span class="labelHistoryDetailHomeKare">Nhận xét:</span>
                                                                            <p class="commentHistoryDetailHomeKare">{{comment.review}}</p>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                {{/each}}
                                                                <div class="totalCostHistoryDetailHomeKare">
                                                                    <span class="labelHistoryDetailHomeKare">Tổng số tiền:</span>
                                                                    <span class="valueHistoryDetailHomeKare">{{totalCost}}VNĐ</span>
                                                                    <!-- Add Thanh toán button -->
                                                                    <button id="payButton" class="btn btn-primary" data-id="{{_id}}">Thanh toán</button>
                                                                </div>
                                                            </div>
                                                        
                                                        </div>
                                                    </div>
                                            </td>
                                        </tr>
                                        {{/each}}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    
                        <div class="table-section-homedetail">
                            <h2 class="title-homedetail">Ngắn hạn</h2>
                            <div class="table-container-homedetail">
                                <table class="modern-table-homedetail">
                                    <thead>
                                        <tr>
                                            <th>Ngày Yêu cầu</th>
                                            <th>Loại Đơn</th>
                                            <th>Giá Chuẩn</th>
                                            <th>Giờ bắt đầu</th>
                                            <th>Giờ kết thúc</th>
                                            <th>Trạng Thái</th>
                                        </tr>
                                    </thead>
                                    <tbody id="shortTermTable-homedetail">
                                        
                                        {{#each shortTermRequests}}
                                        <tr>
                                            <td>{{orderDate}}</td>
                                            <td>{{requestType}}</td>
                                            <td>{{totalCost}}</td>
                                            <td>{{#formatTime startTime }}{{/formatTime}}</td>
                                            <td>{{#formatTime endTime }}{{/formatTime}}</td>
                                            <td>
                                                {{!-- <p class="status-detail cancel">{{status}}</p> --}}
                                                <button class="btnHistoryDetailHomeKare" data-id="{{#sum @index ../longTermRequests.length}}{{/sum}}" onclick="showBillType(this,'short')" aria-label="View Short Term Bill Details">Chi tiết</button>
                                            <!-- Thay thế phần modal chi tiết ngắn hạn hiện tại -->
                                            <div class="modalHistoryDetailHomeKare" id="shortTermModalHistoryDetailHomeKare">
                                                <div class="modalContentHistoryDetailHomeKare">
                                                    <span class="closeModalHistoryDetailHomeKare"
                                                        onclick="closeModal('shortTermModalHistoryDetailHomeKare')">&times;</span>
                                                    <div class="modalHeaderHistoryDetailHomeKare">
                                                        <h2 class="modalTitleHistoryDetailHomeKare">Chi tiết hóa đơn ngắn hạn</h2>
                                                    </div>
                                                    <div class="billDetailsHistoryDetailHomeKare">
                                                        <div class="detailItemHistoryDetailHomeKare">
                                                            <span class="labelHistoryDetailHomeKare">Ngày:</span>
                                                            <span class="valueHistoryDetailHomeKare">{{orderDate}}</span>
                                                        </div>
                                                        <div class="detailItemHistoryDetailHomeKare">
                                                            <span class="labelHistoryDetailHomeKare">Giờ bắt đầu:</span>
                                                            <span class="valueHistoryDetailHomeKare">{{#formatTime startTime}}{{/formatTime}}</span>
                                                        </div>
                                                        <div class="detailItemHistoryDetailHomeKare">
                                                            <span class="labelHistoryDetailHomeKare">Giờ kết thúc:</span>
                                                            <span class="valueHistoryDetailHomeKare">{{#formatTime startTime}}{{/formatTime}}</span>
                                                        </div>
                                                        {{#each schedules}}
                                                        {{#if @first}}
                                                        <div class="detailItemHistoryDetailHomeKare">
                                                            <span class="labelHistoryDetailHomeKare">Trạng thái:</span>
                                                            <span class="valueHistoryDetailHomeKare status-completeHistoryDetailHomeKare">{{#getStatus status}}{{/getStatus}}</span>
                                                        </div>
                                                        {{/if}}

                                                        {{/each}}
                                                        <div class="detailItemHistoryDetailHomeKare">
                                                            <span class="labelHistoryDetailHomeKare">Chi phí:</span>
                                                            <span class="valueHistoryDetailHomeKare">{{totalCost}}</span>
                                                        </div>
                                                        <div class="detailItemHistoryDetailHomeKare">
                                                            <span class="labelHistoryDetailHomeKare">Nhận xét:</span>
                                                            <p class="commentHistoryDetailHomeKare">{{comment}}</p>
                                                        </div>
                                                        <!-- Thêm nút thanh toán -->
                                                        <button id="payButtonShort" class="btn btn-primary" style="margin-left:auto;">Thanh toán</button>
                                                    </div>
                                                </div>
                                            </div>
                                            </td>
                                        </tr>
                                        {{/each}}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        {{!-- <!-- Add Thanh toán button -->
                        <button id="payButton" class="btn btn-primary" style="display: none;">Thanh toán</button> --}}
                    </div>
                </div>
            </section>
            <!-- Payment Form Modal -->
            {{!-- <div class="modal" id="paymentModal" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Thanh toán</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form id="paymentForm">
                                <div class="form-group">
                                    <label for="cardNumber">Số thẻ</label>
                                    <input type="text" class="form-control" id="cardNumber" required>
                                </div>
                                <div class="form-group">
                                    <label for="expiryDate">Ngày hết hạn</label>
                                    <input type="text" class="form-control" id="expiryDate" required>
                                </div>
                                <div class="form-group">
                                    <label for="cvv">CVV</label>
                                    <input type="text" class="form-control" id="cvv" required>
                                </div>
                                <button type="submit" class="btn btn-primary">Thanh toán</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div> --}}
            {{!-- about section end --}}
            {{!-- book section start --}}
            {{!-- book section end --}}
        </div>
        {{!-- main content end --}}
    </div>
{{!-- modal xác nhận thanh toán --}}
<!-- Modal Xác nhận thanh toán -->
<div class="modal" id="confirmPaymentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận thanh toán</h5>
                <!-- Thay thế nút close hiện tại -->
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="display: flex
;
    justify-content: center;
    align-items: center;">
                    <span class="btn-close-modal">x</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Bạn xác nhận đã thanh toán cho người giúp việc?</p>
            </div>
            <div class="modal-footer">
             
                <button type="button" class="btn btn-primary" id="confirmPayBtn">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Đánh giá -->
<div class="modal" id="ratingModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Đánh giá người giúp việc</h5>
               
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="display: flex
                ;
                    justify-content: center;
                    align-items: center;">
                    <span class="btn-close-modal">x</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="rating-stars">
                    <i class="fas fa-star" data-rating="1"></i>
                    <i class="fas fa-star" data-rating="2"></i>
                    <i class="fas fa-star" data-rating="3"></i>
                    <i class="fas fa-star" data-rating="4"></i>
                    <i class="fas fa-star" data-rating="5"></i>
                </div>
                <div class="form-group mt-3">
                    <label for="ratingComment">Nhận xét của bạn:</label>
                    <textarea class="form-control" id="ratingComment" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
               
                <button type="button" class="btn btn-primary" id="submitRatingBtn">Gửi đánh giá</button>
            </div>
        </div>
    </div>
</div>
</body>
<script src="/js/app.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
            // Kiểm tra trạng thái hoàn thành và hiển thị nút thanh toán
            function checkAllBillsCompleted() {
                const statusElements = document.querySelectorAll('.valueHistoryDetailHomeKare.status-completeHistoryDetailHomeKare');
                return Array.from(statusElements).every(el => el.textContent.trim() === 'Đã hoàn thành');
            }

            function updatePayButtonVisibility() {
                const payButton = document.getElementById('payButton');
                if (checkAllBillsCompleted()) {
                    payButton.style.display = 'block';
                } else {
                    payButton.style.display = 'none';
                }
            }

            // Xử lý nút thanh toán
            document.getElementById('payButton').addEventListener('click', function () {
                const confirmModal = new bootstrap.Modal(document.getElementById('confirmPaymentModal'));
                confirmModal.show();
            });

            // Xử lý xác nhận thanh toán
            document.getElementById('confirmPayBtn').addEventListener('click', function () {
                // Đóng modal xác nhận
                const confirmModal = bootstrap.Modal.getInstance(document.getElementById('confirmPaymentModal'));
                confirmModal.hide();

                // Hiển thị thông báo thành công
                alert('Xác nhận thanh toán thành công!');

                // Hiển thị modal đánh giá
                const ratingModal = new bootstrap.Modal(document.getElementById('ratingModal'));
                ratingModal.show();
            });

            // Xử lý đánh giá sao
            const stars = document.querySelectorAll('.rating-stars .fa-star');
            let selectedRating = 0;

            stars.forEach(star => {
                star.addEventListener('mouseover', function () {
                    const rating = this.dataset.rating;
                    highlightStars(rating);
                });

                star.addEventListener('mouseout', function () {
                    highlightStars(selectedRating);
                });

                star.addEventListener('click', function () {
                    selectedRating = this.dataset.rating;
                    highlightStars(selectedRating);
                });
            });

            function highlightStars(rating) {
                stars.forEach(star => {
                    const starRating = star.dataset.rating;
                    if (starRating <= rating) {
                        star.classList.add('active');
                    } else {
                        star.classList.remove('active');
                    }
                });
            }

            // Xử lý gửi đánh giá
            document.getElementById('submitRatingBtn').addEventListener('click', function () {
                const comment = document.getElementById('ratingComment').value;

                if (selectedRating === 0) {
                    alert('Vui lòng chọn số sao đánh giá!');
                    return;
                }

                // Gửi đánh giá
                console.log('Đánh giá:', selectedRating, 'sao');
                console.log('Nhận xét:', comment);
                //Đóng modal chi tiết
                const closeModal=document.querySelector('.modalHistoryDetailHomeKare').classList.remove('showModalHistoryDetailHomeKare')
                // Đóng modal đánh giá
                const ratingModal = bootstrap.Modal.getInstance(document.getElementById('ratingModal'));
                ratingModal.hide();

                // Hiển thị thông báo thành công
                alert('Cảm ơn bạn đã đánh giá!');
            });

            // Kiểm tra ban đầu
            updatePayButtonVisibility();
        });
</script>
<script>
    const nav = document.querySelector(".aside__nav"),
        navList = nav.querySelectorAll(".aside__item"),
        totalNavList = navList.length,
        allSection = document.querySelectorAll(".section"), totalSection = allSection.length;
    for (let i = 0; i < totalNavList; i++) {

        const a = navList[i].querySelector("a");
        a.addEventListener("click", function () {
            console.log(this);
            removeBackSection();
            for (let j = 0; j < totalNavList; j++) {
                if (navList[j].querySelector("a").classList.contains("aside__nav-active")) {
                    addBackSection(j);
                    //allSection[j].classList.add("back-section");
                }
                navList[j].querySelector("a").classList.remove("aside__nav-active");
            }
            this.classList.add("aside__nav-active");
            showSection(this);
            if (window.innerWidth < 1200) {
                asideSectionToggleBtn();
            }
        })
    }
    function addBackSection(num) {
        allSection[num].classList.add("back-section");
    }
    function removeBackSection() {
        for (let i = 0; i < totalSection; i++) {
            allSection[i].classList.remove("back-section");
        }
    }
    function showSection(element) {
        for (let i = 0; i < totalSection; i++) {
            allSection[i].classList.remove("home-active");
        }
        const target = element.getAttribute("href").split("#")[1];
        console.log(target);
        document.querySelector("#" + target).classList.add("home-active");

    }
    function updateNav(element) {
        console.log(element.getAttribute("href").split("#")[1]);
        for (let i = 0; i < totalSection; i++) {
            navList[i].querySelector("a").classList.remove("aside__nav-active");
            const target = element.getAttribute("href").split("#")[1];
            if (target === navList[i].querySelector("a").getAttribute("href").split("#")[1]) {
                navList[i].querySelector("a").classList.add("aside__nav-active");
            }
        }


    }
    
    const navToggleBtn = document.querySelector('.aside__nav-toggle'), aside = document.querySelector(".aside");
    navToggleBtn.addEventListener("click", () => {
        asideSectionToggleBtn();
    })
    function asideSectionToggleBtn() {
        aside.classList.toggle("open");
        navToggleBtn.classList.toggle("open");
        for (let i = 0; i < totalSection; i++) {
            allSection[i].classList.toggle('open');
        }
    }

    
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
            // Get form elements
            const form = document.getElementById('userForm-input-form');
            const inputs = form.querySelectorAll('.input-form-accountdetail');
            const editBtn = document.getElementById('editBtn');
            const saveBtn = document.getElementById('saveBtn');
            const phoneInput = document.getElementById('phone');

            // Phone number validation
            phoneInput.addEventListener('input', function (e) {
                this.value = this.value.replace(/[^0-9]/g, '');
            });

            // Edit button click handler
            editBtn.addEventListener('click', function () {
                // Enable all inputs
                inputs.forEach(input => {
                    input.disabled = false;
                });

                // Switch button states
                editBtn.disabled = true;
                saveBtn.disabled = false;

                // Focus on first input
                inputs[0].focus();
            });

            // Save button click handler
            saveBtn.addEventListener('click', function () {
                // Basic validation
                let isValid = true;
                inputs.forEach(input => {
                    if (!input.value.trim()) {
                        isValid = false;
                        input.style.borderColor = '#ff4444';
                        showError(input, 'không được để trống');
                    } else {
                        input.style.borderColor = '#e1e1e1';
                        clearError(input);
                    }
                });

                // Phone number specific validation
                if (phoneInput.value.length < 10) {
                    isValid = false;
                    phoneInput.style.borderColor = '#ff4444';
                    showError(phoneInput, 'Số điện thoại phải ít nhất 10 chữ số');
                }

                if (!isValid) {
                    return;
                }

                // Disable inputs and update button states
                inputs.forEach(input => {
                    input.disabled = true;
                });

                editBtn.disabled = false;
                saveBtn.disabled = true;

                // Show success message
                //alert('thay đổi thông tin thành công!');

                form.submit()
            });

            // Helper function to show error message
            function showError(input, message) {
                let errorDiv = input.parentElement.querySelector('.error-message');
                if (!errorDiv) {
                    errorDiv = document.createElement('div');
                    errorDiv.className = 'error-message';
                    errorDiv.style.color = '#ff4444';
                    errorDiv.style.fontSize = '0.8rem';
                    errorDiv.style.marginTop = '5px';
                    input.parentElement.appendChild(errorDiv);
                }
                errorDiv.textContent = message;
            }

            // Helper function to clear error message
            function clearError(input) {
                const errorDiv = input.parentElement.querySelector('.error-message');
                if (errorDiv) {
                    errorDiv.remove();
                }
            }

            // Add input event listeners for real-time validation
            inputs.forEach(input => {
                input.addEventListener('input', function () {
                    if (this.value.trim()) {
                        this.style.borderColor = '#e1e1e1';
                        clearError(this);
                    }
                });
            });
        });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
            // Get all status selects
            const statusSelects = document.querySelectorAll('.status-select-homedetail');

            // Function to update select styling based on selected value
            function updateSelectStyle(select) {
                // Remove all possible status classes
                select.classList.remove('completed-homedetail', 'in-progress-homedetail', 'cancelled-homedetail');

                // Add the appropriate class based on the selected value
                select.classList.add(select.value);

                // Update row styling
                const row = select.closest('tr');
                row.style.backgroundColor = getBackgroundColor(select.value);
            }

            // Function to get background color based on status
            function getBackgroundColor(status) {
                switch (status) {
                    case 'completed-homedetail':
                        return '#f8fff8';
                    case 'in-progress-homedetail':
                        return '#fff8f0';
                    case 'cancelled-homedetail':
                        return '#fff5f5';
                    default:
                        return 'transparent';
                }
            }

            // Add change event listeners to all status selects
            statusSelects.forEach(select => {
                // Set initial styling
                updateSelectStyle(select);

                // Add change event listener
                select.addEventListener('change', function () {
                    updateSelectStyle(this);
                });
            });

            // Function to add new row to a table
            function addNewRow(tableId, taskId) {
                const tbody = document.getElementById(tableId);
                const newRow = document.createElement('tr');

                newRow.innerHTML = `
            <td>${taskId}</td>
            <td>New Task</td>
            <td>Unassigned</td>
            <td>${new Date().toISOString().split('T')[0]}</td>
            <td>Medium</td>
            <td>
                <select class="status-select-homedetail">
                    <option value="in-progress">Đang thực hiện</option>
                    <option value="completed">Hoàn thành</option>
                    <option value="cancelled">Hủy</option>
                </select>
            </td>
        `;

                tbody.appendChild(newRow);

                // Initialize the new status select
                const newSelect = newRow.querySelector('.status-select-homedetail');
                updateSelectStyle(newSelect);
                newSelect.addEventListener('change', function () {
                    updateSelectStyle(this);
                });
            }

            // Example function to generate task IDs
            function generateTaskId(tableId) {
                const prefix = tableId === 'longTermTable-homedetail' ? 'LT' : 'ST';
                const rows = document.getElementById(tableId).getElementsByTagName('tr');
                const number = (rows.length + 1).toString().padStart(3, '0');
                return `${prefix}${number}`;
            }

            // Optional: Add functionality to add new rows
            window.addLongTermTask = function () {
                addNewRow('longTermTable-homedetail', generateTaskId('longTermTable-homedetail'));
            };

            window.addShortTermTask = function () {
                addNewRow('shortTermTable-homedetail', generateTaskId('shortTermTable-homedetail'));
            };

            // Initialize all existing rows with background colors
            document.querySelectorAll('.modern-table-homedetail tbody tr').forEach(row => {
                const select = row.querySelector('.status-select-homedetail');
                if (select) {
                    row.style.backgroundColor = getBackgroundColor(select.value);
                }
            });
        });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
            const dropdownBtn = document.querySelector('.dropdown-btn-homecare');
            const dropdownContent = document.querySelector('.dropdown-content-homecare');
            const dropdownItems = document.querySelectorAll('.dropdown-item-homecare');
            const modals = document.querySelectorAll('.modal-homecare');
            const closeButtons = document.querySelectorAll('.close-btn-homecare');

            // Toggle dropdown
            dropdownBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                dropdownContent.classList.toggle('active-detail-homecare');
            });

            // Close dropdown when clicking outside
            document.addEventListener('click', (e) => {
                if (!dropdownBtn.contains(e.target)) {
                    dropdownContent.classList.remove('active-detail-homecare');
                }
            });

            // Handle dropdown items click and show corresponding modal
            dropdownItems.forEach(item => {
                item.addEventListener('click', () => {
                    const modalId = `${item.dataset.modal}-modal-homecare`;
                    const modal = document.getElementById(modalId);
                    modal.classList.add('active-detail-homecare');
                    dropdownContent.classList.remove('active-detail-homecare');
                });
            });

            // Close modal when clicking close button
            closeButtons.forEach(btn => {
                btn.addEventListener('click', () => {
                    const modal = btn.closest('.modal-homecare');
                    modal.classList.remove('active-detail-homecare');
                });
            });

            // Close modal when clicking outside
            modals.forEach(modal => {
                modal.addEventListener('click', (e) => {
                    if (e.target === modal) {
                        modal.classList.remove('active-detail-homecare');
                    }
                });
            });

            // Handle logout button
            const logoutBtn = document.querySelector('.logout-btn-homecare');
            if (logoutBtn) {
                logoutBtn.addEventListener('click', () => {
                    alert('Logging out...');
                    document.getElementById('logout-modal-homecare').classList.remove('active-detail-homecare');
                });
            }
        });
</script>
<script>
    function showBillType(btn,type) {
            // Get both bill containers
            const shortTermBill = document.getElementById('shortTermBillHistoryDetailHomeKare');
            const longTermBill = document.getElementById('longTermBillHistoryDetailHomeKare');


            // Get all buttons
            const buttons = document.querySelectorAll('.btnHistoryDetailHomeKare');
            index = btn.getAttribute('data-id')
            
            // Reset all buttons
            buttons.forEach(button => {
                button.style.background = '#3498db';
            });

            // Show selected bill type and highlight active button
            if (type === 'short') {
                openModal('shortTermModalHistoryDetailHomeKare',index);

                buttons[0].style.background = '#2980b9';
            } else {
                openModal('longTermModalHistoryDetailHomeKare',index);
                buttons[1].style.background = '#2980b9';
            }
        }

        function openModal(modalId,index) {
            const buttons = document.querySelectorAll('.btnHistoryDetailHomeKare');
            const row= buttons[index].parentNode;
            console.log("open modal " ,row)
            const modal=row.querySelector('#'+modalId)
            //const modal = row.getElementById(modalId);
            console.log("open modal ", modal)
            modal.classList.add('showModalHistoryDetailHomeKare');
            document.body.style.overflow = 'hidden';

            // Add click outside to close functionality
            modal.addEventListener('click', function (e) {
                if (e.target === modal) {
                    closeModal(modalId,index);
                }
            });

            // Add escape key to close functionality
            document.addEventListener('keydown', function (e) {
                if (e.key === 'Escape') {
                    closeModal(modalId);
                }
            });
        }

        function closeModal(modalId) {
            const buttons = document.querySelectorAll('.btnHistoryDetailHomeKare');
            const row= buttons[index].parentNode;
            console.log("open modal " ,row)
            const modal=row.querySelector('#'+modalId)
            //const modal = document.getElementById(modalId);
            modal.classList.remove('showModalHistoryDetailHomeKare');
            document.body.style.overflow = 'auto';
        }

        // Show short term bill modal by default when page loads
        document.addEventListener('DOMContentLoaded', () => {
            // Don't show any modal by default, wait for user click
            const buttons = document.querySelectorAll('.btnHistoryDetailHomeKare');
            buttons[0].style.background = '#2980b9';
        });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
            // Check if all bills are completed
            function checkAllBillsCompleted() {
                const statusElements = document.querySelectorAll('.status-detail');
                return Array.from(statusElements).every(el => el.textContent.trim() === 'Đã hoàn thành');
            }

            // Show or hide the pay button based on bill status
            function updatePayButtonVisibility() {
                const payButton = document.getElementById('payButton');
                if (checkAllBillsCompleted()) {
                    payButton.style.display = 'block';
                } else {
                    payButton.style.display = 'none';
                }
            }

            // Show payment form modal
            function showPaymentForm() {
                const paymentModal = new bootstrap.Modal(document.getElementById('paymentModal'));
                paymentModal.show();
            }

            // Handle payment form submission
            function handlePaymentFormSubmission(event) {
                event.preventDefault();
                alert('Thanh toán thành công!');
                const paymentModal = bootstrap.Modal.getInstance(document.getElementById('paymentModal'));
                paymentModal.hide();
            }

            // Add event listeners
            document.getElementById('payButton').addEventListener('click', showPaymentForm);
            document.getElementById('paymentForm').addEventListener('submit', handlePaymentFormSubmission);

            // Initial check
            updatePayButtonVisibility();
        });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
            // Khởi tạo tất cả modals
            const modals = document.querySelectorAll('.modal');
            modals.forEach(modal => {
                new bootstrap.Modal(modal);
            });

            // Xử lý nút close
            const closeButtons = document.querySelectorAll('.btn-close');
            closeButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const modal = this.closest('.modal');
                    const modalInstance = bootstrap.Modal.getInstance(modal);
                    if (modalInstance) {
                        modalInstance.hide();
                    }
                });
            });
        });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Xử lý cho cả dài hạn và ngắn hạn
        function checkBillCompleted(modalId) {
            const statusElement = document.querySelector(`#${modalId} .status-completeHistoryDetailHomeKare`);
            return statusElement && statusElement.textContent.trim() === 'Đã hoàn thành';
        }

        function updatePayButtonVisibility(modalId, buttonId) {
            console.log("update paybutton " , modalId , buttonId)
            const payButton = document.getElementById(buttonId);
            if (checkBillCompleted(modalId)) {
                payButton.style.display = 'block';
            } else {
                payButton.style.display = 'none';
            }
        }

        // Xử lý nút thanh toán ngắn hạn
        document.getElementById('payButtonShort').addEventListener('click', function () {
            const confirmModal = new bootstrap.Modal(document.getElementById('confirmPaymentModal'));
            confirmModal.show();
        });

        // Xử lý xác nhận thanh toán
        document.getElementById('confirmPayBtn').addEventListener('click', function () {
            // Đóng modal xác nhận
            const confirmModal = bootstrap.Modal.getInstance(document.getElementById('confirmPaymentModal'));
            confirmModal.hide();

            // Hiển thị thông báo thành công
            alert('Xác nhận thanh toán thành công!');

            // Hiển thị modal đánh giá
            const ratingModal = new bootstrap.Modal(document.getElementById('ratingModal'));
            ratingModal.show();

            // Đóng modal chi tiết
            const detailModal = document.querySelector('.modalHistoryDetailHomeKare');
            if (detailModal) {
                detailModal.classList.remove('showModalHistoryDetailHomeKare');
            }
        });

        // Xử lý đánh giá
        const stars = document.querySelectorAll('.rating-stars .fa-star');
        let selectedRating = 0;

        stars.forEach(star => {
            star.addEventListener('click', function () {
                selectedRating = this.dataset.rating;
                highlightStars(selectedRating);
            });
        });

        // Submit đánh giá
        document.getElementById('submitRatingBtn').addEventListener('click', function () {
            if (selectedRating === 0) {
                alert('Vui lòng chọn số sao đánh giá!');
                return;
            }

            const comment = document.getElementById('ratingComment').value;
             //Đóng modal chi tiết
           const closeModal = document.getElementById('shortTermModalHistoryDetailHomeKare').classList.remove('showModalHistoryDetailHomeKare');
            // Đóng modal đánh giá
            const ratingModal = bootstrap.Modal.getInstance(document.getElementById('ratingModal'));
            ratingModal.hide();

            // Hiển thị thông báo thành công
            alert('Cảm ơn bạn đã đánh giá!');
        });

        // Kiểm tra và hiển thị nút thanh toán khi mở modal
        function onModalOpen(modalId, buttonId) {
            updatePayButtonVisibility(modalId, buttonId);
        }

        // Event listeners cho việc mở modal
        document.querySelectorAll('.btnHistoryDetailHomeKare').forEach(btn => {
            btn.addEventListener('click', function () {
                const type = this.getAttribute('onclick').includes('short') ? 'short' : 'long';
                const modalId = `${type}TermModalHistoryDetailHomeKare`;
                const buttonId = `payButton${type.charAt(0).toUpperCase() + type.slice(1)}`;
                onModalOpen(modalId, buttonId);
            });
        });
    });
</script>
<script>
    window.dispatchEvent(new Event("template-loaded"));
</script>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Homecare</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="/js/scripts.js"></script>
</head>
<body>
    <div class="container-request" style="margin-top: 100px">
        
    <div class="confirmation-container-form-homecare">
        <h1 class="title-form-homecare">Xác Nhận Thông Tin Đặt Dịch Vụ</h1>
    
        <form id="confirmationForm" class="form-form-homecare" action="/request/save" method="POST">
            <input type="hidden" id="customerInfo" name="customerInfo" value="">
            <input type="hidden" name="requestType" value="{{request.requestType}}">
            <input type="hidden" name="orderDate" value="{{request.orderDate}}">
            <div class="grid-form-homecare">
                <div class="group-form-homecare">
                    <label class="label-form-homecare" for="phone">Số điện thoại</label>
                    <input class="input-form-homecare" type="tel" id="phone" name="phone" value=""{{customer.phone}}"" required>
                </div>
    
                <div class="group-form-homecare">
                    <label class="label-form-homecare" for="fullname">Họ và tên</label>
                    <input class="input-form-homecare" type="text" id="fullname" name="fullname" value="{{customer.fullName}}"  required>
                </div>
    
                <div class="group-form-homecare">
                    <label class="label-form-homecare" for="city">Thành phố</label>
                    <select class="select-form-homecare" id="city" name="province" required>
                        <option value="{{request.province}}">{{request.province}}</option>
                    </select>
                </div>
    
                <div class="group-form-homecare">
                    <label class="label-form-homecare" for="district">Quận</label>
                    <select class="select-form-homecare" id="district" name="district" required>
                        <option value="{{request.district}}">{{request.district}}</option>
                    </select>
                </div>
    
                {{!-- <div class="group-form-homecare">
                    <label class="label-form-homecare" for="ward">Phường</label>
                    <select class="select-form-homecare" id="ward" name="ward" required>
                        <option value="">Chọn phường</option>
                    </select>
                </div> --}}
    
                <div class="group-form-homecare full-width-form-homecare">
                    <label class="label-form-homecare" for="address">Địa chỉ chi tiết</label>
                    <input class="input-form-homecare" type="text" id="address" name="address" value="{{customer.address}}" required>
                </div>
    
                <div class="group-form-homecare">
                    <label class="label-form-homecare" for="date">Ngày thực hiện</label>
                    {{#each request.dates}}
                    <input class="input-form-homecare" type="date" id="date" name="dates[]" value="{{this}}" required>

                    {{/each}}

                </div>
    
                <div class="group-form-homecare">
                    <label class="label-form-homecare" for="startTime">Giờ bắt đầu</label>
                    <input class="input-form-homecare" type="time" id="startTime" name="startTime" value="{{request.startTime}}" required>
                </div>
    
                <div class="group-form-homecare">
                    <label class="label-form-homecare" for="endTime">Giờ kết thúc</label>
                    <input class="input-form-homecare" type="time" id="endTime" name="endTime" value="{{request.endTime}}" required>
                </div>
    
                <div class="group-form-homecare full-width-form-homecare">
                    <label class="label-form-homecare" for="service-confirm">Dịch vụ đã chọn</label>
                    <input class="input-form-homecare readonly-form-homecare" type="text" id="service-confirm" name="service" value="{{service.title}}"
                        readonly>
                        <input class="input-form-homecare readonly-form-homecare" type="hidden" id="service-confirm" name="service_id"
                            value="{{service._id}}" readonly>
                </div>
    
                <div class="group-form-homecare full-width-form-homecare">
                    <label class="label-form-homecare" for="totalAmount">Tổng số tiền</label>
                    <input class="input-form-homecare total-form-homecare" type="text" id="totalAmount" name="totalCost" value="{{request.totalCost}}"
                        readonly>
                </div>
            </div>
    
            <div class="button-group-form-homecare">
                <button type="button" class="button-form-homecare cancel-form-homecare" onclick="cancelForm()">Hủy</button>
                <button type="submit" class="button-form-homecare confirm-form-homecare" id="submitBtn">Xác nhận</button>
            </div>
        </form>
    </div>
    </div>
</body>
<script>

    const submitBtn = document.getElementById('submitBtn');
    const customerInfo = document.querySelector('#customerInfo')
    const nameInput = document.querySelector('#fullname');
    const phoneInput = document.querySelector('#phone');
    const addressInput = document.querySelector('#address');
    console.log(submitBtn);
    console.log(customerInfo);
    console.log(nameInput);
    console.log(phoneInput);
    console.log(addressInput);
    submitBtn.onclick = function () {
        customerInfo.value = JSON.stringify({
            fullName: nameInput.value,
            phone: phoneInput.value,
            address: addressInput.value
        })
    }
</script>
<script>
    /*document.getElementById('form-2').addEventListener('submit', function(event) {
        const startDateInput = document.getElementById('myID');
        const startDateValue = new Date(startDateInput.value);
        
        // Format the date to ensure leading zeros
        const formattedDate = startDateValue.getFullYear() + '-' +
            String(startDateValue.getMonth() + 1).padStart(2, '0') + '-' +
            String(startDateValue.getDate()).padStart(2, '0');
        
        // Set the formatted date back to the input
        startDateInput.value = formattedDate;
    });*/
    // Sample data for districts and wards
        const locationData = {
            hanoi: {
                districts: {
                    'ba-dinh': ['Kim Mã', 'Liễu Giai', 'Ngọc Hà'],
                    'hoan-kiem': ['Hàng Bạc', 'Hàng Bồ', 'Hàng Gai'],
                    'hai-ba-trung': ['Bách Khoa', 'Bạch Mai', 'Đồng Nhân']
                }
            },
            hcm: {
                districts: {
                    'quan-1': ['Bến Nghé', 'Bến Thành', 'Cầu Kho'],
                    'quan-2': ['An Lợi Đông', 'Bình An', 'Cát Lái'],
                    'quan-3': ['Võ Thị Sáu', 'Nguyễn Thái Bình', 'Phạm Ngũ Lão']
                }
            }
        };

        // Initialize form with sample data
        document.addEventListener('DOMContentLoaded', () => {
            // Set today as minimum date
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').min = today;

            // Set sample service and amount
            //document.getElementById('service-confirm').value = 'Dịch vụ giúp việc theo giờ';
            //document.getElementById('totalAmount').value = '300,000 VND';

            // Add event listeners
            document.getElementById('city').addEventListener('change', updateDistricts);
            document.getElementById('district').addEventListener('change', updateWards);
           // document.getElementById('confirmationForm').addEventListener('submit', handleSubmit);
        });

        // Update districts based on selected city
        function updateDistricts() {
            const city = document.getElementById('city').value;
            const districtSelect = document.getElementById('district');
            const wardSelect = document.getElementById('ward');

            // Clear existing options
            districtSelect.innerHTML = '<option value="">Chọn quận</option>';
            wardSelect.innerHTML = '<option value="">Chọn phường</option>';

            if (city && locationData[city]) {
                const districts = Object.keys(locationData[city].districts);
                districts.forEach(district => {
                    const option = new Option(
                        district.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase()),
                        district
                    );
                    districtSelect.add(option);
                });
            }
        }

        // Update wards based on selected district
        function updateWards() {
            const city = document.getElementById('city').value;
            const district = document.getElementById('district').value;
            const wardSelect = document.getElementById('ward');

            // Clear existing options
            wardSelect.innerHTML = '<option value="">Chọn phường</option>';

            if (city && district && locationData[city].districts[district]) {
                const wards = locationData[city].districts[district];
                wards.forEach(ward => {
                    const option = new Option(ward, ward);
                    wardSelect.add(option);
                });
            }
        }

        // Handle form submission
        function handleSubmit(e) {
            e.preventDefault();

            // Basic validation
            const requiredFields = ['phone', 'fullname', 'city', 'district', 'ward', 'address', 'date', 'startTime', 'endTime'];
            const isValid = requiredFields.every(field => {
                const element = document.getElementById(field);
                if (!element.value) {
                    element.style.borderColor = 'var(--error-red)';
                    return false;
                }
                element.style.borderColor = 'var(--gray-medium)';
                return true;
            });

            if (isValid) {
                // Show success message
                alert('Đặt dịch vụ thành công!');
                // Redirect to home page
                goToHomePage();
            }
        }

        // Cancel form
        function cancelForm() {
            if (confirm('Bạn có chắc muốn hủy không?')) {
                goToHomePage();
            }
        }

        // Navigate to home page
        function goToHomePage() {
            // For demo purposes, we'll just redirect to index.html
            // In a real application, you would redirect to your actual home page URL
            window.location.href = 'index.html';
        }

        // Validate phone number
        document.getElementById('phone').addEventListener('input', function (e) {
            const phoneNumber = e.target.value.replace(/\D/g, '');
            if (phoneNumber.length > 10) {
                e.target.value = phoneNumber.slice(0, 10);
            } else {
                e.target.value = phoneNumber;
            }
        });

        // Validate time selection
        document.getElementById('startTime').addEventListener('change', function () {
            document.getElementById('endTime').min = this.value;
        });

        document.getElementById('endTime').addEventListener('change', function () {
            if (this.value <= document.getElementById('startTime').value) {
                alert('Giờ kết thúc phải sau giờ bắt đầu');
                this.value = '';
            }
        });
</script>

</html>
<div class="slideshow">
    <div class="slideshow__inner">  
        <section class="slider-lastest owl-carousel owl-theme">
            <div class="slider-lastest__item slider-lastest__item--1">
        
            </div>
            <div class="slider-lastest__item slider-lastest__item--2">
        
            </div>
            <div class="slider-lastest__item slider-lastest__item--3">
            </div>
            <div class="slider-lastest__item slider-lastest__item--4">
        
            </div>
        </section>
        <div class="slideshow__search">
            <section class="slideshow__search-inner">
                <h2 class="slideshow__search-heading">ĐẶT DỊCH VỤ GIÚP VIỆC</h2>
                <div class="slideshow__search-component">
                    <div class="slideshow__form-group slideshow__form-group--button">
                        <button  id="short-term-btn" type="button" class="btn btn__short-term btn__form-term active-term">THEO NGÀY</button>
                        <button id="long-term-btn" type="button"  class="btn btn__long-term btn__form-term">DÀI HẠN</button>
                    </div>
                    <div id="short-term">
                        <form id="short-term-form" method='get' action="/request/shortterm" class="form__short-term">
                            <div class="form-group slideshow__form-group slideshow__form-group--adjust">
                               
                                    {{!-- <select name="province" class="province form-select form-select__province status">
                                        <option value="0">Chọn Tỉnh</option>
                                        {{#each locations}}
                                        <option value="{{this.Name}}">{{this.Name}}</option>
                                        {{/each}}
                                    </select> --}}
                                    <div class="wrapper-province extra-province" style="margin:0;">
                                        <div class="wrapper-province__select-btn extra-short">
                                            <span style="white-space:nowrap">Chọn Tỉnh</span>
                                            <i class="fa-solid fa-chevron-down"></i>
                                        </div>
                                        <div class="wrapper-province__content" style="position:relative;">
                                            <div class="warapper-province__search" style="display:flex; gap:5px;">
                                                <input name="province" class="wrapper-province__input" spellcheck="false" type="text" placeholder="Tìm kiếm" style="width:100%" >
                                                <i class="fa-solid fa-magnifying-glass"></i>
                                            </div>
                                            <ul class="wrapper-province__options"></ul>
                                        </div>
                                    </div>
                               
                             
                                    
                                        {{!-- <select name="district" class="district form-select form-select__district status" aria-label="Default select example">
                                            <option selected>Chon Quận</option>
                                            
                                        </select> --}}
                                  
                            <div class="wrapper-district extra-district" style="margin:0;">
                                <div class="wrapper-district__select-btn extra-short">
                                    <span style="white-space:nowrap">Chọn Quận</span>
                                    <i class="fa-solid fa-chevron-down"></i>
                                </div>
                                <div class="wrapper-district__content" style="position:relative;">
                                    <div class="warapper-district__search" style="display:flex; gap:5px;">
                                        <input name="district" class="wrapper-district__input" spellcheck="false" type="text"
                                            placeholder="Tìm kiếm" style="width:100%">
                                        <i class="fa-solid fa-magnifying-glass"></i>
                                    </div>
                                    <ul class="wrapper-district__options"></ul>
                                </div>
                            </div>
                               
                               
                                    {{!-- <select name="service_id" class="service form-select form-select__service status">
                                        <option value="0">Chọn dịch vụ</option>
                                        {{#each services}}
                                        <option value="{{this._id}}">{{this.title}}</option>
                                        {{/each}}
                                    </select> --}}
                                    <div class="wrapper-service extra-service" style="margin:0;">
                                        <div class="wrapper-service__select-btn extra-short">
                                            <span style="white-space:nowrap">Chọn Dịch Vụ</span>
                                            <i class="fa-solid fa-chevron-down"></i>
                                        </div>
                                        <div class="wrapper-service__content" style="position:relative;">
                                            <div class="warapper-service__search" style="display:flex; gap:5px;">
                                                <input name="service" class="wrapper-service__input" spellcheck="false" type="text"
                                                    placeholder="Tìm kiếm" style="width:100%">
                                                <i class="fa-solid fa-magnifying-glass"></i>
                                            </div>
                                            <ul class="wrapper-service__options"></ul>
                                        </div>
                                    </div>
                                
                                {{!-- <label for="start-date" class="form-label__start-date">
                                    <input type="date" id="start-date" name="dates" min="{{formatDate}}" style="height:44px"
                                        onfocus="this.showPicker()" value="{{formatDate}}" class="input-date status">
                                </label> --}}
                                <div class="form__group form-label__start-date" style="margin-top:0px;">
                                    <div class="form__text-input form-control" style="border-radius:0px;height:100%;border: 1px solid #02571C;">
                                        <input style="font-size: 1.5rem;height:20px" id="myID2" placeholder="Chọn ngày" type="text" class="form__input"
                                            value="{{order.dates}}" name="dates" required class="input-date status">
                                        {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                        <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                    </div>
                                    <p class="form__error"></p>
                                </div>
                            </div>
                            <div class="form-group slideshow__form-group slideshow__form-group--remain">
                                
                                    {{!-- <select id="start-time" name="startTime" class="form-select form-select__start-time status">
                                        <option value="0">Từ giờ</option>
                                        <option value="1">6:00 giờ</option>
                                        <option value="2">6:30 giờ</option>
                                        <option value="2">7:30 giờ</option>
                                        <option value="3">8:00 giờ</option>
                                        <option value="4">8:30 giờ</option>
                                        <option value="5">9:30 giờ</option>
                                        <option value="6">10:00 giờ</option>
                                        <option value="7">10:30 giờ</option>
                                        <option value="8">11:00 giờ</option>
                                        <option value="9">11:30 giờ</option>
                                        <option value="10">12:00 giờ</option>
                                        <option value="11">12:30 giờ</option>
                                        <option value="12">13:00 giờ</option>
                                        <option value="13">13:30 giờ</option>
                                        <option value="14">14:00 giờ</option>
                                        <option value="15">14:30 giờ</option>
                                        <option value="16">15:00 giờ</option>
                                        <option value="17">15:30 giờ</option>
                                        <option value="18">16:00 giờ</option>
                                        <option value="19">16:30 giờ</option>
                                        <option value="20">17:00 giờ</option>
                                        <option value="21">17:30 giờ</option>
                                        <option value="22">18:00 giờ</option>
                                        <option value="23">18:30 giờ</option>
                                        <option value="24">19:00 giờ</option>
                                        <option value="24">19:30 giờ</option>
                                        <option value="24">20:00 giờ</option>
                                    </select> --}}
                                    <div class="form__group hour_short" style="margin-top:0px;">
                                        <div class="form__text-input form-control" style="border-radius:0px;height:100%;border: 1px solid #02571C;">
                                            <input style="font-size: 1.5rem;height:20px" id="myID3" placeholder="Giờ Bắt Đầu" type="text"
                                                class="form__input" value="{{order.startTime}}" name="startTime" required>
                                            {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                            <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                        </div>
                                        <p class="form__error"></p>
                                    </div>
                               
                                
                                    {{!-- <select id="end-time" name="endTime" class="form-select form-select__end-time status">
                                        <option value="0">Đến giờ</option>
                                        <option value="1">6:00 giờ</option>
                                        <option value="2">6:30 giờ</option>
                                        <option value="3">7:00 Giờ</option>
                                        <option value="4">7:30 giờ</option>
                                        <option value="5">8:00 giờ</option>
                                        <option value="6">8:30 giờ</option>
                                        <option value="7">9:00 giờ</option>
                                        <option value="8">9:30 giờ</option>
                                        <option value="9">10:00 giờ</option>
                                        <option value="10">10:30 giờ</option>
                                        <option value="11">11:00 giờ</option>
                                        <option value="12">11:30 giờ</option>
                                        <option value="13">12:00 giờ</option>
                                        <option value="14">12:30 giờ</option>
                                        <option value="15">13:00 giờ</option>
                                        <option value="16">13:30 giờ</option>
                                        <option value="17">14:00 giờ</option>
                                        <option value="18">14:30 giờ</option>
                                        <option value="19">15:00 giờ</option>
                                        <option value="20">15:30 giờ</option>
                                        <option value="21">16:00 giờ</option>
                                        <option value="22">16:30 giờ</option>
                                        <option value="23">17:00 giờ</option>
                                        <option value="24">17:30 giờ</option>
                                        <option value="25">18:00 giờ</option>
                                        <option value="26">18:30 giờ</option>
                                        <option value="27">19:00 giờ</option>
                                        <option value="28">19:30 giờ</option>
                                        <option value="29">20:00 giờ</option>
                                    </select> --}}
                                    <div class="form__group hour_short" style="margin-top:0px;">
                                        <div class="form__text-input form-control" style="border-radius:0px;height:100%;border: 1px solid #02571C;">
                                            <input style="font-size: 1.5rem;height:20px" id="myID4" placeholder="Giờ Bắt Đầu" type="text"
                                                class="form__input" value="{{order.startTime}}" name="startTime" required>
                                            {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                            <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                        </div>
                                        <p class="form__error"></p>
                                    </div>
                               
                            </div>
                            <button id="submitForm1" class="btn btn-find">TÌM KIẾM</button>
                        </form>
                    </div>
                    <div id="long-term">
                        <form id="long-term-form"  method="get" action="/request/longterm" class="form__long-term hide-form">
                           
                                <div class="form-group slideshow__form-group slideshow__form-group--adjust">
                                    
                                        {{!-- <select name="province" class="province form-select form-select__province status">
                                            <option value="0">Chọn Tỉnh</option>
                                            {{#each locations}}
                                            <option value="{{this.Name}}">{{this.Name}}</option>
                                            {{/each}}
                                        </select> --}}
                                        <div class="wrapper-province__long extra-province" style="margin:0;">
                                            <div class="wrapper-province__select-btn extra-short">
                                                <span style="white-space:nowrap">Chọn Tỉnh</span>
                                                <i class="fa-solid fa-chevron-down"></i>
                                            </div>
                                            <div class="wrapper-province__content" style="position:relative;">
                                                <div class="warapper-province__search" style="display:flex; gap:5px;">
                                                    <input class="wrapper-province__input" spellcheck="false" type="text" placeholder="Tìm kiếm" style="width:100%">
                                                    <i class="fa-solid fa-magnifying-glass"></i>
                                                </div>
                                                <ul class="wrapper-province__options"></ul>
                                            </div>
                                        </div>
                                   
                               
                                    {{!-- <select name="district" class="district form-select form-select__district status" aria-label="Default select example">
                                        <option selected>Chọn Quận</option>
                                    </select>             --}}
                                    <div class="wrapper-district extra-district wrapper-district__long" style="margin:0;">
                                        <div class="wrapper-district__select-btn extra-short">
                                            <span style="white-space:nowrap">Chọn Quận</span>
                                            <i class="fa-solid fa-chevron-down"></i>
                                        </div>
                                        <div class="wrapper-district__content" style="position:relative;">
                                            <div class="warapper-district__search" style="display:flex; gap:5px;">
                                                <input name="district" class="wrapper-district__input" spellcheck="false" type="text" placeholder="Tìm kiếm"
                                                    style="width:100%">
                                                <i class="fa-solid fa-magnifying-glass"></i>
                                            </div>
                                            <ul class="wrapper-district__options"></ul>
                                        </div>
                                    </div>
                                   
                                        {{!-- <select name="service_id" class="service form-select form-select__service status">
                                            <option value="0">Chọn dịch vụ</option>
                                            {{#each services}}
                                            <option value="{{this._id}}">{{this.title}}</option>
                                            {{/each}}
                                        </select> --}}
                                        <div class="wrapper-service extra-service wrapper-service__long" style="margin:0;">
                                            <div class="wrapper-service__select-btn extra-short">
                                                <span style="white-space:nowrap">Chọn Dịch Vụ</span>
                                                <i class="fa-solid fa-chevron-down"></i>
                                            </div>
                                            <div class="wrapper-service__content" style="position:relative;">
                                                <div class="warapper-service__search" style="display:flex; gap:5px;">
                                                    <input name="service" class="wrapper-service__input" spellcheck="false" type="text" placeholder="Tìm kiếm"
                                                        style="width:100%">
                                                    <i class="fa-solid fa-magnifying-glass"></i>
                                                </div>
                                                <ul class="wrapper-service__options"></ul>
                                            </div>
                                        </div>
                                    
                                {{!-- <label for="start-date" class="form-label__start-date">
                                    <input type="date" id="start-date" name="startDate" min="{{formatDate}}" style="height:44px"
                                        onfocus="this.showPicker()" value="{{formatDate}}" class="input-date status">
                                </label> --}}
                                <div class="form__group form-label__start-date" style="margin-top:0px;">
                                    <div class="form__text-input form-control" style="border-radius:0px;height:100%;border: 1px solid #02571C;">
                                        <input style="font-size: 1.5rem;height:20px" id="myID7" placeholder="Chọn ngày" type="text" class="form__input"
                                            value="{{order.dates}}" name="startDate" required class="input-date status">
                                        {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                        <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                    </div>
                                    <p class="form__error"></p>
                                </div>
                                {{!-- <label for="end-date" class="form-label__start-date">
                                    <input type="date" id="end-date" name="endDate" style="height:44px"
                                        onfocus="this.showPicker()" min="{{formatDate}}" value="{{formatDate}}" class="input-date status">
                                </label>                             --}}
                                <div class="form__group form-label__start-date" style="margin-top:0px;">
                                    <div class="form__text-input form-control" style="border-radius:0px;height:100%;border: 1px solid #02571C;">
                                        <input style="font-size: 1.5rem;height:20px" id="myID8" placeholder="Chọn ngày" type="text" class="form__input"
                                            value="{{order.dates}}" name="endDate" required class="input-date status">
                                        {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                        <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                    </div>
                                    <p class="form__error"></p>
                                </div>
                                </div>
                                <div class="form-group slideshow__form-group slideshow__form-group--remain">
                                   
                                        {{!-- <select id="start-time" name="startTime" class="form-select form-select__start-time status">
                                            <option value="0">Từ giờ</option>
                                            <option value="1">6:00 giờ</option>
                                            <option value="2">6:30 giờ</option>
                                            <option value="3">7:00 Giờ</option>
                                            <option value="3">7:30 giờ</option>
                                            <option value="4">8:00 giờ</option>
                                            <option value="5">8:30 giờ</option>
                                            <option value="6">9:00 giờ</option>
                                            <option value="7">9:30 giờ</option>
                                            <option value="8">10:00 giờ</option>
                                            <option value="9">10:30 giờ</option>
                                            <option value="10">11:00 giờ</option>
                                            <option value="11">11:30 giờ</option>
                                            <option value="12">12:00 giờ</option>
                                            <option value="13">12:30 giờ</option>
                                            <option value="14">13:00 giờ</option>
                                            <option value="15">13:30 giờ</option>
                                            <option value="16">14:00 giờ</option>
                                            <option value="17">14:30 giờ</option>
                                            <option value="18">15:00 giờ</option>
                                            <option value="19">15:30 giờ</option>
                                            <option value="20">16:00 giờ</option>
                                            <option value="21">16:30 giờ</option>
                                            <option value="22">17:00 giờ</option>
                                            <option value="23">17:30 giờ</option>
                                            <option value="24">18:00 giờ</option>
                                            <option value="25">18:30 giờ</option>
                                            <option value="26">19:00 giờ</option>
                                            <option value="27">19:30 giờ</option>
                                            <option value="28">20:00 giờ</option>
                                        </select> --}}
                                        <div  class="form__group hour_short" style="margin-top:0px;">
                                            <div class="form__text-input form-control" style="border-radius:0px;height:100%;border: 1px solid #02571C;">
                                                <input style="font-size: 1.5rem;height:20px" id="myID5" placeholder="Giờ Bắt Đầu" type="text"
                                                    class="form__input" value="{{order.startTime}}" name="startTime" required>
                                                {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                                <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                            </div>
                                            <p class="form__error"></p>
                                        </div>
                                   
                                   
                                        {{!-- <select id="end-time" name="endTime" class="form-select form-select__end-time status">
                                            <option value="0">Đến giờ</option>
                                            <option value="1">6:00 giờ</option>
                                            <option value="2">6:30 giờ</option>
                                            <option value="3">7:00 Giờ</option>
                                            <option value="3">7:30 giờ</option>
                                            <option value="4">8:00 giờ</option>
                                            <option value="5">8:30 giờ</option>
                                            <option value="6">9:00 giờ</option>
                                            <option value="7">9:30 giờ</option>
                                            <option value="8">10:00 giờ</option>
                                            <option value="9">10:30 giờ</option>
                                            <option value="10">11:00 giờ</option>
                                            <option value="11">11:30 giờ</option>
                                            <option value="12">12:00 giờ</option>
                                            <option value="13">12:30 giờ</option>
                                            <option value="14">13:00 giờ</option>
                                            <option value="15">13:30 giờ</option>
                                            <option value="16">14:00 giờ</option>
                                            <option value="17">14:30 giờ</option>
                                            <option value="18">15:00 giờ</option>
                                            <option value="19">15:30 giờ</option>
                                            <option value="20">16:00 giờ</option>
                                            <option value="21">16:30 giờ</option>
                                            <option value="22">17:00 giờ</option>
                                            <option value="23">17:30 giờ</option>
                                            <option value="24">18:00 giờ</option>
                                            <option value="25">18:30 giờ</option>
                                            <option value="26">19:00 giờ</option>
                                            <option value="27">19:30 giờ</option>
                                            <option value="28">20:00 giờ</option>
                                        </select> --}}
                                        <div   class="form__group hour_short" style="margin-top:0px;">
                                            <div class="form__text-input form-control" style="border-radius:0px;height:100%;border: 1px solid #02571C;">
                                                <input  name="endTime" style="font-size: 1.5rem;height:20px" id="myID6" placeholder="Giờ Kết Thúc" type="text"
                                                    class="form__input" value="{{order.startTime}}" required>
                                                {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                                <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                            </div>
                                            <p class="form__error"></p>
                                        </div>
                                   
                                </div>
                          

                        </form>
                            <button class="btn btn-find btn-long hide-form" id="submitForm2" form="long-term-form">TÌM KIẾM</button>
                    </div>
                </div>
            </section>
        </div>
        </div>
    </div>
{{!-- </div> --}}
<section id="introduce" class="about">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2 class="heading">Tất cả vì sự hài lòng của quý khách hàng</h2>
                <p class="about__content">
                    Chúng tôi, Procleaner, là tập hợp những cá nhân xuất thân từ thực tế cuộc sống của những người giúp việc, được sự chắp
                    cánh của những cộng sự am hiểu công nghệ và giàu kinh nghiệm quản lý.Procleaner mong muốn đem đến cho Quý khách hàng
                    những dịch vụ tốt nhất với những con người được huấn luyện theo quy trình công nghiệp.
                    <br>
                    <br>
                    Đội ngũ nhân viên giúp việc của Procleaner được trang bị những kỹ năng làm việc chuyên nghiệp, phẩm chất đạo đức tốt, lý
                    lịch rõ ràng và sức khỏe đầy đủ. Bên cạnh đó, được sự hỗ trợ của những công nghệ tiên tiến nhất hiện nay, chúng tôi đã
                    sẵn sàng mang đến cho Quý khách hàng những dịch vụ chuyên nghiệp với phương châm “Tất cả vì sự hài lòng của Quý khách
                    hàng.
                </p>
                <a href="https://play.google.com/store" class="google-play" target="_blank">
                    <img src="/img/google_app_new.png" alt="Google Play" class="btn-google-play__img">
                </a>
                <a href="https://www.apple.com/app-store/" class="apple-store" target="_blank">
                    <img src="/img/apple_app_store.png" alt="apple-store" class="btn-apple-store__img">
                </a>

            </div>
        </div>
        <div class="row about__process">
            <div class="col-md-8 center">
                <h2 class="heading">Các bước đặc dịch vụ</h2>
                <div class="row about__process-inner">
                    <div class="col-md-3 about__process-center">
                        <div class="about__process-item">
                            <span class="about__process-content">1</span>
                        </div>
                        <h3 class="about__process-heading">Chọn dịch vụ</h3>
                    </div>  
                    <div class="col-md-3 about__process-center">
                        <div class="about__process-item">
                            <span class="about__process-content">2</span>
                        </div>
                        <h3 class="about__process-heading">Xác nhận, tư vấn</h3>
                    </div>
                    <div class="col-md-3 about__process-center">
                        <div class="about__process-item">
                            <span class="about__process-content">3</span>
                        </div>
                        <h3 class="about__process-heading">Thực hiện công việc</h3>
                    </div>
                    <div class="col-md-3 about__process-center">
                        <div class="about__process-item">
                            <span class="about__process-content">4</span>
                        </div>
                        <h3 class="about__process-heading">Đánh giá người giúp việc</h3>
                    </div>
               </div>
            </div>
        </div>
    </div>
</section>
<section id="service">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h2 class="heading extra-color-white">Chúng tôi hân hạnh gửi đến quý khách hàng những dịch vụ sau</h2>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row grid-service">
            <div class="col-lg-3 col-md-6 col-mobile-12">
                <div class="service__box">
                    <i class="fa-solid fa-child-reaching" style="color: #ffffff;font-size: 40px;@include abstracts.screen(xl){font-size: 25px;}"></i>
                    <h3 class="service__box-heading">Chăm sóc bé</h3>
                    <p class="service__box-content">Cho bé ăn, uống sữa, ru ngũ, tắm bé, thay tã lót, quần áo, chơi với trẻ, dẫn bé đi dạo ...</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-mobile-12">
                <div class="service__box">
                    <i class="fa-solid fa-wheelchair" style="color: #ffffff;font-size: 40px;@include abstracts.screen(xl){font-size: 25px;}"></i>
                    <h3 class="service__box-heading">Chăm sóc người già</h3>
                    <p class="service__box-content">Tắm rửa, giặt quần áo, trò chuyện, dẫn đi dạo, nấu thức ăn ... cho người già.</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-mobile-12">
                <div class="service__box">
                    <i class="fa-solid fa-person-dress" style="color: #ffffff;font-size: 40px;@include abstracts.screen(xl){font-size: 25px;}"></i>
                    <h3 class="service__box-heading">Chăm sóc sản phụ</h3>
                    <p class="service__box-content">Đi chợ, nấu ăn, tắm rửa và vệ sinh cho sản phụ, xông hơ, giặt quần áo ... cho sản phụ</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-mobile-12">
                <div class="service__box">
                    <i class="fa-solid fa-stethoscope" style="color: #ffffff;font-size: 40px;@include abstracts.screen(xl){font-size: 25px;}"></i>
                    <h3 class="service__box-heading">Nuôi bệnh</h3>
                    <p class="service__box-content">Theo dõi mạch, nhiệt, hô hấp, giấc ngủ, cho ăn, cho uống nước, sửa, thuốc, xoa bóp ... cho người bệnh.</p>
                </div>
            </div>
        </div>
        <div class="row margin-top grid-service">
            <div class="col-lg-3 col-md-6 col-mobile-12">
                <div class="service__box">
                    <i class="fa-solid fa-trash" style="color: #ffffff;font-size: 40px;@include abstracts.screen(xl){font-size: 25px;}"></i>
                    <h3 class="service__box-heading">Dọn dẹp vệ sinh</h3>
                    <p class="service__box-content">Quét dọn nhà cửa, sân vườn, vệ sinh toilet, cầu thang, tưới cây, giặt phơi quần áo, nấu ăn, rửa chén bát, pha trà ...</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-mobile-12">
                <div class="service__box">
                    <i class="fa-solid fa-bus" style="color: #ffffff; font-size: 40px;@include abstracts.screen(xl){font-size: 25px;}"></i>
                    <h3 class="service__box-heading">Đưa đón bé đi học</h3>
                    <p class="service__box-content">Đưa bé đến trường, trao đổi với giao viên về tình hình học tập của bé, đưa đón bé về nhà, truyền tải thông điệp của giáo
                    viên đến phụ huynh ...</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-mobile-12">
                <div class="service__box">
                    <i class="fa-solid fa-spoon" style="color: #ffffff;font-size: 40px;@include abstracts.screen(xl){font-size: 25px;}"></i>
                    <h3 class="service__box-heading">Nấu ăn</h3>
                    <p class="service__box-content">Đi chợ, chọn mua thức ăn, chế biến các món ăn theo yêu cầu, bày biện món, dọn dẹp, rửa chén, lau bàn, bếp ...</p>
                </div>
            </div>
                <div class="col-lg-3 col-md-6 col-mobile-12">
                <div class="service__box">
                    <i class="fa-solid fa-building" style="color: #ffffff; font-size: 40px;@include abstracts.screen(xl){font-size: 25px;}  "></i>
                    <h3 class="service__box-heading">Vệ sinh văn phòng</h3>
                    <p class="service__box-content">Vệ sinh trần, sàn; giặt thảm, ghế sofa; lau chùi cửa, kính, bàn ghế, tủ hồ sơ; vệ sinh văn phòng, công ty, nhà xưởng...</p>
                </div>
            </div>
        </div>
    </div>
</section>
<section id="faq" class="faq" style="padding-top: 100px;">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2 class="heading">Câu hỏi thường gặp</h2>
            </div>
        </div>
        <div class="row">
            <div class="faq__list">
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">1. Tại sao Quý khách hàng nên chọn người giúp việc thông qua Homecare?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Những lý do sau đây sẽ giúp cho quý khách hàng giải đáp được thắc mắc trên:</p>
                            <ul class="faq__item-answer-text--desc">
                                <li>- Người giúp việc là nhân viên của ProCleaner, chịu sự quản lý và chấp hành nội quy của Công ty nên Quý khách hàng không
                                cần lo lắng về việc quản lý Người giúp việc.</li>
                                <li>- Người giúp việc có lý lịch nhân thân rõ ràng, có giấy chứng nhận sức khỏe của bệnh viện.</li>
                                <li>- Quý khách hàng sẽ luôn có Người giúp việc ổn định trong suốt thời gian hợp đồng.</li>
                                <li>- Quý khách hàng được ProCleaner chịu trách nhiệm vật chất nếu có thất thoát xảy ra do người giúp việc.</li>
                                <li>Chăm sóc sản phụ</li>
                                <li>- ProCleaner xếp hạng nhân viên thông qua đánh giá của khách hàng nên luôn đảm bảo chất lượng Người giúp việc.</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">2. Liên hệ với Homecare như thế nào?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Vui lòng gọi số: 08.3930.5057 08.3930.5058 hoặc gửi email đến địa chỉ: cs@procleaner.vn</p>
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">3. Ứng dụng Homecare đòi các quyền truy cập (permission) để làm gì?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Ứng dụng ProCleaner khi cài đặt sẽ sử dụng các quyền truy cập sau đây:</p>
                            <ul class="faq__item-answer-text--desc">
                                <li>- Vị trí người dùng: Giúp ứng dụng tìm vị trí hiện tại của người dùng để thiết lập địa điểm phục vụ dễ dàng hơn.</li>
                                <li>- SMS: Giúp ứng dụng tự động điền mã kích hoạt tài khoản mà không cần phải vào ứng dụng tin nhắn.</li>
                                <li>- Điện thoại: Giúp khách hàng khi click vào số điện thoại thì có thể gọi ngay cho ProCleaner.</li>
                                <li>- Ảnh/phương tiện/tệp: ProCleaner lưu lại một số hình ảnh ít thay đổi để giúp ứng dụng chạy nhanh hơn.</li>
                                <li>- Lịch sử ứng dụng và thiết bị: ProCleaner sẽ tự động ghi nhận những trường hợp chạy ứng dụng bị lỗi tạo điều kiện cho
                                nhóm phát triển nâng cao chất lượng ứng dụng.</li>
                                <li>- Quyền truy cập mạng: ProCleaner là ứng dụng cần kết nối mạng để có thể hoạt động.</li>
                                <li>- Nhận dạng: ProCleaner sử dụng nhận dạng để gửi thông tin trạng thái Yêu cầu cho người dùng thông qua trung tâm thông
                                báo của điện thoại.</li>
                                <li>- Các quyền truy cập còn lại ProCleaner dùng để ghi nhận thói quen sử dụng của người dùng nhằm giúp nhóm phát triển liên
                                tục cải tiến ứng dụng để phục vụ người sử dụng tốt hơn.</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">4. Tại sao phải đánh giá người giúp việc?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Đánh giá người giúp việc vừa là quyền lợi vừa là trách nhiệm của Quý khách hàng. Việc này giúp cho Công ty đánh giá
                            chính xác hơn về chất lượng công việc mà nhân viên chúng tôi đang mang đến phục vụ Quý khách, đồng thời giúp chúng tôi
                            có cơ sở để xác nhận với Quý khách hàng rằng chúng tôi đã mang đến cho Quý khách một dịch vụ đúng như cam kết.</p>
                           
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">5. Làm thế nào để sử dụng dịch vụ của Homecare?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">• Đặt yêu cầu trực tiếp hoặc bằng ứng dụng ProCleaner trên smartphone hoặc thông qua website ProCleaner.vn.
                            </p>
                            <p class="faq__item-answer-text--desc faq-title">Liên hệ với chúng tôi:</p>
                            <ul class="faq__item-answer-text--desc">
                                <li>Gọi điện thoại: 08.3930.5057 08.3930.5058</li>
                                <li>Gửi email: cs@procleaner.vn</li>
                                <li>Đến Trụ sở: 216 Nguyễn Thị Minh Khai, Phường 6, Quận 3, TP. HCM</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">6. Hình thức thanh toán phí sử dụng dịch vụ như thế nào?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Quý khách hàng thanh toán tiền phí sử dụng dịch theo từng tháng nếu là hợp đồng dài hạn hoặc ngay khi kết thúc thời gian
                            sử dụng dịch vụ nếu là hợp đồng ngắn hạn (dưới một tháng).
                            </p>
                            <p class="faq__item-answer-text--desc faq-title">Quý khách hàng thanh toán bằng tiền mặt cho nhân viên do Công ty chỉ định theo giấy giới thiệu của Công ty.
                            </p>
                        
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">7. Có cần phải ký hợp đồng giúp việc không?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Để thuận tiện cho Quý khách hàng, chúng tôi đã ghi sẵn các điều khoản trong mục “CHÍNH SÁCH” trên website Công ty
                            (ProCleaner.vn). Khi Quý khách hàng đặt yêu cầu sử dụng dịch vụ của Công ty, thì mặc nhiên là đã đọc và đồng ý tất cả
                            các điều khoản này.
                            </p>
                            <p class="faq__item-answer-text--desc faq-title">Nếu Quý khách hàng cần ký hợp đồng, Công ty chúng tôi sẽ tư vấn và gửi đến Quý khách hàng từng hợp đồng riêng cho từng
                            trường hợp cụ thể.
                            </p>
                        
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">8. Có được đổi người giúp việc không?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Quý khách có toàn quyền yêu cầu thay đổi người giúp việc nhưng phải báo trước cho Công ty trước 24h của buổi làm đó.
                            </p>
                        
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">9. Người giúp việc có thu tiền mặt của khách hàng không?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Việc thu tiền sẽ do nhân viên có giấy giới thiệu của Công ty đến thu. Người giúp việc sẽ không được phép thu tiền mặt
                            của Quý khách hàng ngoại trừ đơn hàng yêu cầu dịch vụ dưới 1 tuần. Khi đó Người giúp việc cũng phải có giấy giới thiệu
                            của Công ty thì mới được phép thu tiền của Quý khách hàng.
                            </p>
                        
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">10. Thời gian từ lúc đặt yêu cầu đến lúc có người giúp việc tối thiểu là bao lâu?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                    <div class="faq__item-answer-text">
                        <p class="faq__item-answer-text--desc faq-title">Để chúng tôi có thể sắp xếp Người giúp việc cho Quý khách hàng một cách thuận lợi, thời gian mà Người giúp việc của Công
                        ty có thể đến phục vụ yêu cầu của Quý khách tối thiểu là 03 (ba) giờ đồng hồ kể từ lúc Quý khách đặt yêu cầu.
                        </p>
                    
                    </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">11. Thời gian phục vụ của người giúp việc bắt đầu và kết thúc khi nào?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                    <div class="faq__item-answer-text">
                        <p class="faq__item-answer-text--desc faq-title">Việc thu tiền sẽ do nhân viên có giấy giới thiệu của Công ty đến thu. Người giúp việc sẽ không được phép thu tiền mặt
                        của Quý khách hàng ngoại trừ đơn hàng yêu cầu dịch vụ dưới 1 tuần. Khi đó Người giúp việc cũng phải có giấy giới thiệu
                        của Công ty thì mới được phép thu tiền của Quý khách hàng.
                        </p>
                    
                    </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">12. Giá dịch vụ có tăng trong thời điểm Tết hay không?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                    <div class="faq__item-answer-text">
                        <p class="faq__item-answer-text--desc faq-title">Việc Đối với những ngày thường hay ngày Tết lượng Khách hàng đăng ký sử dụng dịch vụ đang tăng lên rất nhanh nhưng với
                        phương châm phục vụ Khách hàng đặt chất lượng lên hàng đầu, trở thành Khách hàng thường xuyên và gắn bó với Công ty thì
                        ProCleaner vẫn giữ giá dịch vụ như cũ đối với tất cả các dịch vụ. Trừ những Khách hàng có nhu cầu sử dụng trong khoảng
                        thời gian Công ty nghỉ Tết Nguyên Đán bắt đâu từ 30 Tết – hết mùng 4 Tết thì giá dịch vụ sẽ tính 300% so với ngày thường
                        theo quy định Luật lao động của Việt Nam.
                        </p>
                    </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">13. Homecare cung cấp dịch vụ ở những nơi nào?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                        <div class="faq__item-answer-text">
                            <p class="faq__item-answer-text--desc faq-title">Công ty chúng tôi cung cấp dịch vụ ở tất cả các Quận trong địa bàn Thành phố Hồ Chí Minh.
                            </p>
                        </div>
                    </div>
                </div>
                <div class="faq__item">
                    <div class="faq__item-question">
                        <p class="faq__item-question-text">14. Chất lượng người giúp việc của Homecare được đảm bảo như thế nào?</p>
                        <i class="fa-solid fa-plus"></i>
                    </div>
                    <div class="faq__item-answer">
                    <div class="faq__item-answer-text">
                        <p class="faq__item-answer-text--desc faq-title">Chúng tôi có một quy trình tuyển dùng và đạo tạo người giúp
                        việc chuyên nhiệp từ khâu tìm kiếm nguồn lực người giúp
                        việc, lựa chọn tuyển dùng và đào tạo đến khâu điều phối người giúp việc phù hợp với từng đối tượng khách hàng. Điều đó
                        giúp chúng tôi có thể tự tin để mang để cho Quý khách hàng những dịch vụ với chất lượng cao nhất. Ngoải ra, chúng tôi
                        cũng thiết kế các kênh liên lạc một cách linh động nhất để Quý khách có thể trao đổi trực tiếp với Công ty về chất lượng
                        dịch vụ và con người mà Công ty chúng tôi đang mang đến cho Quý khách. Điều này giúp chúng tôi có thể lắng nghe phản ánh
                        của Quý khách một cách nhanh chóng, chính xác và đầy đủ nhất để có thể ngày một nâng cao chất lượng dịch vụ mà chúng tôi
                        mong muốn mang đến cho Quý khách, làm cho cuộc sống của Quý khách ngày càng tiện lợi hơn.
                        </p>
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="partnership">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2 class="heading">Các đối tác của chúng tôi</h2>
            </div>
        </div>
    </div>
</section>

<div id="helper" class="helper">
    <div class="container">
        <div class="swiper mySwiper helper__mySwiper">
            <div class="swiper-wrapper helper__wrapper">
                {{#each helpers}}
                <div class="swiper-slide helper__swiper-slide">
                   <a href="/helper/{{this._id}}"> <img src="{{this.avatar}}" alt="helper" class="helper__swiper-slide-img"></a>
                    {{!-- <div class="helper__infor">
                        <h5 class="helper__infor-name">{{this.fullName}}</h5>
                        <p class="helper__infor-time">1000 giờ</p>
                        <p class="helper__infor-age">20 tuổi</p>
                    </div> --}}
                </div>
                {{/each}}
            </div>
            <div class="swiper-pagination" ></div>
        </div>
    </div>
</div>
<script>
      document.addEventListener('DOMContentLoaded', function () {
            const wrapper_service = document.querySelector(".wrapper-service");
            const selectBtn_service = wrapper_service.querySelector(".wrapper-service__select-btn");
            const searchInp_service = wrapper_service.querySelector(".wrapper-service__input");
            const options_service = wrapper_service.querySelector(".wrapper-service__options");

            // Kiểm tra xem các element có tồn tại không
            if (!wrapper_service || !selectBtn_service || !searchInp_service || !options_service) {
                console.error("Không tìm thấy các element cần thiết");
                return;
            }


       // let services = ["11","22"];
      // map(location => { return location.Name.replace(/(Tỉnh|Thành phố) /g, '') });
        let services = {{{json services}}}.map((service)=>{return {title:service.title,id:service._id}});
        
        console.log(services);
        function addCountry_service(selectedCountry) {
            options_service.innerHTML = "";
            services.forEach((country, index) => {
                let isSelected = country.title == selectedCountry ? "selected" : "";
                let li = `<li onclick="updateName_service(this)"   class="${isSelected}">${country.title}</li>`;
                options_service.insertAdjacentHTML("beforeend", li);
            });
        }

        function updateName_service(selectedLi) {
            console.log("updataName service is running")
            let idService =0;
            console.log(selectedLi);
            for(let i =0 ; i< services.length;i++){
                if (selectedLi.innerText == services[i].title){
                    idService=services[i].id;
                    break;
                }
            }
            searchInp_service.Name=idService;
            searchInp_service.value = selectedLi.innerText;
            addCountry_service(selectedLi.innerText);
            wrapper_service.classList.remove("active-menu-search");
            selectBtn_service.firstElementChild.innerText = selectedLi.innerText;
            //console.log("Selected index:", selectedIndex); // Log ra index
            // Có thể lưu index vào một biến hoặc xử lý theo nhu cầu
            // give the district selections with index
           
        }

        // Đưa updateName vào global scope để onclick có thể truy cập
        window.updateName_service = updateName_service;

        searchInp_service.addEventListener("keyup", () => {
            let arr = [];
            let searchWord = searchInp_service.value.toLowerCase();
            arr = services.filter((data, index) => {
                return data.toLowerCase().startsWith(searchWord);
            }).map((data, index) => {
                console.log(data);
                let isSelected = data == selectBtn_service.firstElementChild.innerText ? "selected" : "";
                return `<li onclick="updateName_service(this)" class="${isSelected}">${data}</li>`;
            }).join("");
            options_service.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
        });

        selectBtn_service.addEventListener("click", () => wrapper_service.classList.toggle("active-menu-search"));

        // Khởi tạo danh sách ban đầu
        addCountry_service();
        });
        //long-service
        document.addEventListener('DOMContentLoaded', function () {
                const wrapper_service = document.querySelector(".wrapper-service__long");
                const selectBtn_service = wrapper_service.querySelector(".wrapper-service__select-btn");
                const searchInp_service = wrapper_service.querySelector(".wrapper-service__input");
                const options_service = wrapper_service.querySelector(".wrapper-service__options");

                // Kiểm tra xem các element có tồn tại không
                if (!wrapper_service || !selectBtn_service || !searchInp_service || !options_service) {
                    console.error("Không tìm thấy các element cần thiết");
                    return;
                }


                let services = {{{ json services }}}.map((service) => { return service.title });
                function addCountry_serviceLong(selectedCountry) {
                    options_service.innerHTML = "";
                    services.forEach((country, index) => {
                        let isSelected = country == selectedCountry ? "selected" : "";
                        let li = `<li onclick="updateName_serviceLong(this)" class="${isSelected}">${country}</li>`;
                        options_service.insertAdjacentHTML("beforeend", li);
                    });
                }

                function updateName_serviceLong(selectedLi) {
                    console.log("updataName service is running")
                    searchInp_service.value = selectedLi.innerText;
                    addCountry_serviceLong(selectedLi.innerText);
                    wrapper_service.classList.remove("active-menu-search");
                    selectBtn_service.firstElementChild.innerText = selectedLi.innerText;
                     // Log ra index
                    // Có thể lưu index vào một biến hoặc xử lý theo nhu cầu
                    // give the district selections with index

                }
                // Đưa updateName vào global scope để onclick có thể truy cập
                window.updateName_serviceLong = updateName_serviceLong;

                searchInp_service.addEventListener("keyup", () => {
                    let arr = [];
                    let searchWord = searchInp_service.value.toLowerCase();
                    arr = services.filter((data, index) => {
                        return data.toLowerCase().startsWith(searchWord);
                    }).map((data, index) => {
                        let isSelected = data == selectBtn_service.firstElementChild.innerText ? "selected" : "";
                        return `<li onclick="updateName_serviceLong(this)" class="${isSelected}">${data}</li>`;
                    }).join("");
                    options_service.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
                });

                selectBtn_service.addEventListener("click", () => wrapper_service.classList.toggle("active-menu-search"));

                // Khởi tạo danh sách ban đầu
                addCountry_serviceLong();
            });
    let districts=[];
    function makeAction_short(){
        document.addEventListener('DOMContentLoaded', function () {
                    const wrapper = document.querySelector(".wrapper-province");
                    const selectBtn = wrapper.querySelector(".wrapper-province__select-btn");
                    const searchInp = wrapper.querySelector(".wrapper-province__input");
                    const options = wrapper.querySelector(".wrapper-province__options");

                    // Kiểm tra xem các element có tồn  tại không
                    if (!wrapper || !selectBtn || !searchInp || !options) {
                        console.error("Không tìm thấy các element cần thiết");
                        return;
                    }


                    let countries = {{{ json locations }}}.map(location =>{return  location.Name.replace(/(Tỉnh|Thành phố) /g, '')});
            console.log(countries);
            

            function addCountry(selectedCountry) {
                options.innerHTML = "";
                countries.forEach((country, index) => {
                    let isSelected = country == selectedCountry ? "selected" : "";
                    let li = `<li onclick="updateName(this, ${index})" class="${isSelected}">${country}</li>`;
                    options.insertAdjacentHTML("beforeend", li);
                });
            }

            function updateName(selectedLi, selectedIndex) {
                searchInp.value = selectedLi.innerText;
                addCountry(selectedLi.innerText);
                wrapper.classList.remove("active-menu-search");
                selectBtn.firstElementChild.innerText = selectedLi.innerText;
                console.log("Selected index:", selectedIndex); // Log ra index
                // Có thể lưu index vào một biến hoặc xử lý theo nhu cầu
                // give the district selections with index
                 districts = [];
               
                for (let i = 1; i < locations[selectedIndex].Districts.length; i++) {
                   let districtName;
                    console.log(districtName);
                    
                    districts.push(locations[selectedIndex].Districts[i].Name.replace(/(Huyện) /g, ''));
                }
                console.log(districts);
                makeWrapperDistrict(districts,selectedLi);
            }
            // Đưa updateName vào global scope để onclick có thể truy cập
            window.updateName = updateName;
            searchInp.addEventListener("keyup", () => {
                let arr = [];
                let searchWord = searchInp.value.toLowerCase();
                arr = countries.filter((data, index) => {

                    return data.toLowerCase().startsWith(searchWord);
                }).map((data, index) => {
                    for(let i =0 ; i < countries.length;i++){
                        if(data == countries[i]){
                            index=i;
                            break;
                        }
                    }
                    let isSelected = data == selectBtn.firstElementChild.innerText ? "selected" : "";
                    return `<li onclick="updateName(this, ${index})" class="${isSelected}">${data}</li>`;
                }).join("");
                options.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
            });

            selectBtn.addEventListener("click", () => wrapper.classList.toggle("active-menu-search"));

            // Khởi tạo danh sách ban đầu
            addCountry();
        });
    }

      document.addEventListener('DOMContentLoaded', function () {
            const wrapper = document.querySelector(".wrapper-province");
            const selectBtn = wrapper.querySelector(".wrapper-province__select-btn");
            const searchInp = wrapper.querySelector(".wrapper-province__input");
            const options = wrapper.querySelector(".wrapper-province__options");

            // Kiểm tra xem các element có tồn tại không
            if (!wrapper || !selectBtn || !searchInp || !options) {
                console.error("Không tìm thấy các element cần thiết");
                return;
            }


            let countries = {{{ json locations }}}.map(location =>{return  location.Name.replace(/(Tỉnh|Thành phố) /g, '')});
        console.log(countries);

        function addCountry(selectedCountry) {
            options.innerHTML = "";
            countries.forEach((country, index) => {
                let isSelected = country == selectedCountry ? "selected" : "";
                let li = `<li onclick="updateName(this, ${index})" class="${isSelected}">${country}</li>`;
                options.insertAdjacentHTML("beforeend", li);
            });
        }

        function updateName(selectedLi, selectedIndex) {

            searchInp.value = selectedLi.innerText;
            addCountry(selectedLi.innerText);
            wrapper.classList.remove("active-menu-search");
            selectBtn.firstElementChild.innerText = selectedLi.innerText;
            console.log("Selected index:", selectedIndex); // Log ra index
            // Có thể lưu index vào một biến hoặc xử lý theo nhu cầu
            // give the district selections with index
            districts = [];
           
            for (let i = 1; i < locations[selectedIndex].Districts.length; i++) {
                let districtName;
                 console.log(districtName);
                districts.push(locations[selectedIndex].Districts[i].Name.replace(/(Huyện) /g, ''));
            }
            console.log(districts);
            makeWrapperDistrict(districts,selectedLi);
        }

        // Đưa updateName vào global scope để onclick có thể truy cập
        window.updateName = updateName;

        searchInp.addEventListener("keyup", () => {
            let arr = [];
            let searchWord = searchInp.value.toLowerCase();
            arr = countries.filter((data, index) => {
                return data.toLowerCase().startsWith(searchWord);
            }).map((data, index) => {
                for (let i = 0; i < countries.length; i++) {
                    if (data == countries[i]) {
                        index = i;
                        break;
                    }
                }
                let isSelected = data == selectBtn.firstElementChild.innerText ? "selected" : "";
                return `<li onclick="updateName(this, ${index})" class="${isSelected}">${data}</li>`;
            }).join("");
            options.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
        });

        selectBtn.addEventListener("click", () => wrapper.classList.toggle("active-menu-search"));

        // Khởi tạo danh sách ban đầu
        addCountry();
        });
    function makeAction() {
        const wrapper_long = document.querySelector(".wrapper-province__long");
        const selectBtn_long = wrapper_long.querySelector(".wrapper-province__select-btn");
        const searchInp_long = wrapper_long.querySelector(".wrapper-province__input");
        const options_long = wrapper_long.querySelector(".wrapper-province__options");

        // Kiểm tra xem các element có tồn tại không
        if (!wrapper_long || !selectBtn_long || !searchInp_long || !options_long) {
            console.error("Không tìm thấy các element cần thiết");
            return;
        }

        let countries = locations.map(location =>   {return location.Name.replace(/(Tỉnh|Thành phố) /g, '')});
/*
        function addCountry_long(selectedCountry) {
            options_long.innerHTML = "";
            countries.forEach((country, index) => {
                let isSelected = country == selectedCountry ? "selected" : "";
                // Thay đổi từ onclick sang data attribute
                let li = `<li data-index="${index}" class="${isSelected}">${country}</li>`;
                options_long.insertAdjacentHTML("beforeend", li);
            });
            */
              function addCountry_long(selectedCountry) {
                options_long.innerHTML = "";
                countries.forEach((country, index) => {
                    let isSelected = country == selectedCountry ? "selected" : "";
                    let li = `<li onclick="updateNameLong(this, ${index})" class="${isSelected}">${country}</li>`;
                    options_long.insertAdjacentHTML("beforeend", li);
                });
            }

            // Thêm event listener cho tất cả các li elements
           /* options_long.querySelectorAll('li').forEach(li => {
                li.addEventListener('click', function() {
                    const selectedIndex = this.dataset.index;
                    console.log(selectedIndex);
                    searchInp_long.value = "";
                    addCountry_long(this.innerText);
                    wrapper_long.classList.remove("active-menu-search");
                    selectBtn_long.firstElementChild.innerText = this.innerText;
                    
                   // give the district selections with index
                    districts = [];

                    for (let i = 1; i < locations[selectedIndex].Districts.length; i++) {
                        let districtName;
                        console.log(districtName);
                        districts.push(locations[selectedIndex].Districts[i].Name.replace(/(Huyện) /g, ''));
                    }
                    console.log(districts);
                    makeWrapperDistrictLong(districts, selectedIndex);
                });
            });
        }*/
         function updateNameLong(selectedLi, selectedIndex) {

                searchInp_long.value = selectedLi.innerText;
                addCountry_long(selectedLi.innerText);
                wrapper_long.classList.remove("active-menu-search");
                selectBtn_long.firstElementChild.innerText = selectedLi.innerText;
                console.log("Selected index:", selectedIndex); // Log ra index
                // Có thể lưu index vào một biến hoặc xử lý theo nhu cầu
                // give the district selections with index
                districts = [];

                for (let i = 1; i < locations[selectedIndex].Districts.length; i++) {
                    let districtName;
                    console.log(districtName);
                    districts.push(locations[selectedIndex].Districts[i].Name.replace(/(Huyện) /g, ''));
                }
                console.log(districts);
                makeWrapperDistrictLong(districts, selectedLi);
            }

            // Đưa updateName vào global scope để onclick có thể truy cập
            window.updateNameLong = updateNameLong;
        
        searchInp_long.addEventListener("keyup", () => {
            let arr = [];
            let searchWord = searchInp_long.value.toLowerCase();
            arr = countries.filter((data, index) => {
                return data.toLowerCase().startsWith(searchWord);
            }).map((data, index) => {
                for (let i = 0; i < countries.length; i++) {
                    if (data == countries[i]) {
                        index = i;
                        break;
                    }
                }
                let isSelected = data == selectBtn_long.firstElementChild.innerText ? "selected" : "";
                return `<li onclick="updateNameLong(this, ${index})" class="${isSelected}">${data}</li>`;
            }).join("");
            options_long.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
        });

        selectBtn_long.addEventListener("click", () => wrapper_long.classList.toggle("active-menu-search"));

        // Khởi tạo danh sách ban đầu
        addCountry_long();
    }
     const wrapper_district = document.querySelector(".wrapper-district");
        console.log(wrapper_district);
        const selectBtn_district = wrapper_district.querySelector(".wrapper-district__select-btn");
        console.log(selectBtn_district);
        const searchInp_district = wrapper_district.querySelector(".wrapper-district__input");
        console.log(searchInp_district);
        const options_district = wrapper_district.querySelector(".wrapper-district__options");
        const wrapper_districtLong = document.querySelector(".wrapper-district__long");
            console.log(wrapper_districtLong);
            const selectBtn_districtLong = wrapper_districtLong.querySelector(".wrapper-district__select-btn");
            console.log(selectBtn_districtLong);
            const searchInp_districtLong = wrapper_districtLong.querySelector(".wrapper-district__input");
            console.log(searchInp_districtLong);
            const options_districtLong = wrapper_districtLong.querySelector(".wrapper-district__options");
   //makeWrapperDistrict(districts);
    function makeWrapperDistrictLong(districts, selectedLi) {
            console.log(1);
            selectBtn_districtLong.firstElementChild.innerText = districts[0];
            searchInp_districtLong.value = districts[0];
            // Kiểm tra xem các element có tồn tại không
            if (!wrapper_districtLong || !selectBtn_districtLong || !searchInp_districtLong || !options_districtLong) {
                console.error("Không tìm thấy các element cần thiết");
                return;
            }

            console.log(districts);
            function addCountry_districtLong(selectedCountry) {
                options_districtLong.innerHTML = "";
                districts.forEach((country, index) => {
                    let isSelected = country == selectedCountry ? "selected" : "";
                    let li = `<li onclick="updateName_districtLong(this, ${index})" class="${isSelected}">${country}</li>`;
                    options_districtLong.insertAdjacentHTML("beforeend", li);
                });
            }

            function updateName_districtLong(selectedLi, selectedIndex) {

                searchInp_districtLong.value = selectedLi.innerText;
                addCountry_districtLong(selectedLi.innerText);
                wrapper_districtLong.classList.remove("active-menu-search");
                console.log(selectedLi);
                selectBtn_districtLong.firstElementChild.innerText = selectedLi.innerText;
                console.log("Selected index:", selectedIndex); // Log ra index
            }

            // Đưa updateName vào global scope để onclick có thể truy cập
            window.updateName_districtLong = updateName_districtLong;

            searchInp_districtLong.addEventListener("keyup", () => {
                let arr = [];
                let searchWord = searchInp_districtLong.value.toLowerCase();
                arr = districts.filter((data, index) => {
                    return data.toLowerCase().startsWith(searchWord);
                }).map((data, index) => {
                    let isSelected = data == selectBtn_districtLong.firstElementChild.innerText ? "selected" : "";
                    return `<li onclick="updateName_districtLong(this, ${index})" class="${isSelected}">${data}</li>`;
                }).join("");
                options_districtLong.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
            });


            // Khởi tạo danh sách ban đầu
            addCountry_districtLong();
        }
        selectBtn_districtLong.addEventListener("click", (e) => {
            e.stopPropagation(); // Ngăn event bubbling
            wrapper_districtLong.classList.toggle("active-menu-search");
            console.log("District button clicked"); // Debug log);
        })
    function makeWrapperDistrict(districts,selectedLi){
        console.log(1);
           selectBtn_district.firstElementChild.innerText = districts[0];
           searchInp_district.value = districts[0];
            // Kiểm tra xem các element có tồn tại không
            if (!wrapper_district || !selectBtn_district || !searchInp_district || !options_district) {
                console.error("Không tìm thấy các element cần thiết");
                return;
            }

console.log(districts);
        function addCountry_district(selectedCountry) {
            options_district.innerHTML = "";
            districts.forEach((country, index) => {
                let isSelected = country == selectedCountry ? "selected" : "";
                let li = `<li onclick="updateName_district(this, ${index})" class="${isSelected}">${country}</li>`;
                options_district.insertAdjacentHTML("beforeend", li);
            });
        }

        function updateName_district(selectedLi, selectedIndex) {

            searchInp_district.value = selectedLi.innerText;
            addCountry_district(selectedLi.innerText);
            wrapper_district.classList.remove("active-menu-search");
            console.log(selectedLi);
            selectBtn_district.firstElementChild.innerText = selectedLi.innerText;
            console.log("Selected index:", selectedIndex); // Log ra index
        }

        // Đưa updateName vào global scope để onclick có thể truy cập
        window.updateName_district = updateName_district;

        searchInp_district.addEventListener("keyup", () => {
            let arr = [];
            let searchWord = searchInp_district.value.toLowerCase();
            arr = districts.filter((data, index) => {
                return data.toLowerCase().startsWith(searchWord);
            }).map((data, index) => {
                let isSelected = data == selectBtn_district.firstElementChild.innerText ? "selected" : "";
                return `<li onclick="updateName_district(this, ${index})" class="${isSelected}">${data}</li>`;
            }).join("");
            options_district.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
        });
        

        // Khởi tạo danh sách ban đầu
        addCountry_district();
    }
        selectBtn_district.addEventListener("click", (e) =>{ e.stopPropagation(); // Ngăn event bubbling
        wrapper_district.classList.toggle("active-menu-search");
        console.log("District button clicked"); // Debug log);
    })
      
   
</script>
<script>

        const locations = {{{ json locations }}};
        console.log(locations);
        const activeForm = $(".btn__form-term.active-term");
        const btnFormTerms = $$(".btn__form-term");
        const shortTerm = document.getElementById('short-term-form')
        const longTerm = document.getElementById('long-term-form')        
        const shortTermForm=document.querySelector('.form__short-term')
        const longTermForm =document.querySelector('.form__long-term')
        const shortTermBtn = document.getElementById('short-term-btn')
        const longTermBtn = document.getElementById('long-term-btn')
        const btnLong =document.getElementById('submitForm2');
      let provinceSelect = shortTerm.querySelector('.province')
      let  districtSelect = shortTerm.querySelector('.district');

 
       /* shortTerm.onchange = function () {
            let date = shortTerm.querySelector('#start-date')
            let starttime = shortTerm.querySelector('#start-time')
            let endtime = shortTerm.querySelector('#end-time')
           let submitBtn = shortTerm.querySelector('#submitForm1')

          // changeProvince();
            if (date.value != '' && starttime.value != '' && endtime.value != '') {
                submitBtn.disabled = false;
            }
            else {
                submitBtn.disabled = true;
            }
        }
        longTerm.onchange = function () {
            let startdate = longTerm.querySelector('#myID7')
            let enddate = longTerm.querySelector('#myID8')
            let starttime = longTerm.querySelector('#myID5')
            let endtime = longTerm.querySelector('#myID6')
            let submitBtn = longTerm.querySelector('#submitForm2')
         //  changeProvince();
            if (enddate.value != '' && startdate.value != '' && starttime.value != '' && endtime.value != '') {
                submitBtn.disabled = false;
            }
            else {
                submitBtn.disabled = true;
            }
        }*/
   

        shortTermBtn.onclick = function () {
           shortTermForm.classList.toggle("hide-form");
           longTermForm.classList.toggle("hide-form");
           btnLong.classList.add("hide-form");
            $(".btn__form-term.active-term").classList.remove('active-term');
            this.classList.add('active-term');
            districtSelect = shortTerm.querySelector('.district');
            makeAction_short();
            }
        longTermBtn.onclick = function (e) {
            longTermForm.classList.toggle("hide-form");
            shortTermForm.classList.toggle("hide-form");
            btnLong.classList.remove("hide-form");
            $(".btn__form-term.active-term").classList.remove('active-term');
            this.classList.add('active-term');
             districtSelect = longTerm.querySelector('.district');
            makeAction();
          
            }
    let slideShowIndex=0;
</script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    flatpickr("#myID3", {
        enableTime: true,
        noCalendar: true,
        dateFormat: "H:i",
        conjunction: " :: ",
        minTime: "06:00",
        maxTime: "20:00",
    });
     flatpickr("#myID4", {
            enableTime: true,
            noCalendar: true,
            dateFormat: "H:i",
            conjunction: " :: ",
            minTime: "06:00",
            maxTime: "20:00",
        });
        flatpickr("#myID5", {
                enableTime: true,
                noCalendar: true,
                dateFormat: "H:i",
                conjunction: " :: ",
                minTime: "06:00",
                maxTime: "20:00",
            });
            flatpickr("#myID6", {
                    enableTime: true,
                    noCalendar: true,
                    dateFormat: "H:i",
                    conjunction: " :: ",
                    minTime: "06:00",
                    maxTime: "20:00",
                });
    flatpickr("#myID2", {
        minDate: "today",
        mode: "multiple",
        dateFormat: "Y-m-d",
        conjunction: " :: "
    });
    flatpickr("#myID7", {
            minDate: "today",
            mode: "multiple",
            dateFormat: "Y-m-d",
            conjunction: " :: "
        });
        flatpickr("#myID8", {
                minDate: "today",
                mode: "multiple",
                dateFormat: "Y-m-d",
                conjunction: " :: "
            });
</script>

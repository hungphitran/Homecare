<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        Homecare
    </title>

    {{!-- font --}}
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Clicker+Script&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
        integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unpkg.com/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <script src="https://unpkg.com/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <!-- link css -->
    <link rel="stylesheet" href="/css/style.css">
    <!-- script -->
    <script src="/js/scripts.js"></script>
    <link rel="shortcut icon" href="/icon/logo-removeBg.png" type="image/x-icon">
    <script src="https://kit.fontawesome.com/01acedffd5.js" crossorigin="anonymous"></script>
    <style>
        .selected{
            background-color: #E8F5E9;
        }
    </style>
</head>

<body>
    {{!-- Main container start --}}
    <div class="main-container" style="padding-top:70px;padding-bottom:1000px">
        {{!-- aside start --}}
        <div class="aside aside__extra">
            {{!-- <div class="aside__logo">
                <a href="/">
                    <div class="logo">
                        <img src="/icon/logo-removeBg.png" alt="grocerymart" class="logo__img-helper logo __img-header logo_medium">
                    </div>
                </a>
            </div> --}}
            <div class="aside__nav-toggle">
                <span></span>
            </div>
           <form method="get" action="/request/shortterm" class="aside__content">
                <div class="aside__search">
                    <div>
                        <i class="fa-solid fa-magnifying-glass" style="display:inline-block"></i>
                        <span style="display: inline-block;">Tìm Kiếm</span>
                    </div>

                    <button type="submit" style="display:inline-block;background-color:floralwhite; color:black; padding:4px; border-radius:5px;" ><i class="fa-solid fa-filter"></i>Lọc</button>
                </div>
                <ul class="aside__nav aside__nav--extra">
                    <li class="aside__item">
                        <a href="#!" class="aside__nav">
                            <i class="fa fa-calendar" style="margin-right:5px;color:var(--skin-color)"></i>Ngày
                            <ul class="aside__nav-child">
                                <li>
                                    <div class="form__group" style="margin-top:10px;">
                                        <div class="form__text-input form-control">
                                            <input style="font-size: 1.5rem;height:20px" id="myID" placeholder="Chọn ngày" type="text" class="form__input"
                                                value="{{order.dates}}" name="dates" required>
                                            {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                            <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                        </div>
                                        <p class="form__error"></p>
                                    </div>
                                </li>
                            </ul>
                        </a>
                    </li>
                    <li class="aside__item">
                       <a href="#!">
                        <i class="fa fa-clock" style="margin-right:5px;color:var(--skin-color)"></i>Giờ
                            <ul class="aside__nav-child">
                                <li>
                                    <div class="form__group" style="margin-top:5px;">
                                        <div class="form__text-input form-control">
                                            <input style="font-size: 1.5rem;height:20px" id="myID1" placeholder="Giờ Bắt Đầu" type="text"
                                                class="form__input" value="{{order.startTime}}" name="startTime" required>
                                            {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                            <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                        </div>
                                        <p class="form__error"></p>
                                    </div>
                                </li>
                                <li>
                                    <div class="form__group" style="margin-top:5px;">
                                        <div class="form__text-input form-control">
                                            <input style="font-size: 1.5rem;height:20px" id="myID1" placeholder="Giờ Kết Thúc" type="text"
                                                class="form__input" value="{{order.endTime}}" name="endTime" required>
                                            {{!-- <img src="/icon/evelope.svg" alt="evelope" class="form__input-icon"> --}}
                                            <img src="/icon/error.svg" alt="" class="form__input-icon-error">
                                        </div>
                                        <p class="form__error"></p>
                                    </div>
                                </li>
                            </ul>
                       </a>
                    </li>
                    <li class="aside__item">
                        <a href="#!">
                           <i class="fa fa-briefcase" style="margin-right:5px;color:var(--skin-color)"></i>Kinh nghiệm
                        <ul class="aside__nav-child">
                        
                           
                            <li>
                                <label class="province-option">
                                    <input type="radio" {{#unless order.exp}}checked{{/unless}} >
                                    
                                   Tất cả
                                </label>
                            </li>
                            <li>
                                <label class="province-option">
                                    <input type="radio" name="exp" value=1 {{#isEquals 1 order.exp}}checked{{/isEquals}} >
                                   Từ 1 năm trở lên
                                </label>
                            </li>
                            <li>
                                <label class="province-option">
                                    <input type="radio" name="exp" value=2 {{#isEquals 2 order.exp}}checked{{/isEquals}}>
                                Từ 2 năm trở lên
                                </label>
                            </li>
                            <li>
                                <label class="province-option">
                                    <input type="radio" name="exp" value=3 {{#isEquals 3 order.exp}}checked{{/isEquals}}>
                                    Từ 3 năm trở lên
                                </label>
                            </li>
                            <li>
                                <label class="province-option" >
                                    <input type="radio" name="exp" value=4 {{#isEquals 4 order.exp}}checked{{/isEquals}}>
                                    Từ 4 năm trở lên
                                </label>
                            </li>
                            <li>
                                <label class="province-option">
                                    <input type="radio" name="exp" value=5 {{#isEquals 5 order.exp}}checked{{/isEquals}}>
                                    Từ 5 năm trở lên
                                </label>
                            </li>
                        
                        </ul>
                        </a>
                    </li>
                    <li class="aside__item">
                        <a href="#!">
                          <i class="fa fa-tags" style="margin-right:5px;color:var(--skin-color)"></i>Dịch vụ
                          <ul class="aside__nav-child">
                            {{#each services}}
                            <li>
                                <div class="form__group" style="margin-top:10px;">
                                    <input type="checkbox"  id="{{_id}}" name="service_id" value="{{_id}}" {{#compareProperties ../order 'service_id' '_id'}}checked="checked"{{/compareProperties}}>
                                    <label for="#{{_id}}" class="book-item__flex-50-text" >
                                        {{title}}
                                    </label>
                                </div>
                            </li>
                            {{/each}}
                          </ul>
                        </a>
                    </li>
                    <li class="aside__item">
                        <a href="#!">
                           <i class="fa fa-map-marker-alt" style="margin-right:5px;color:var(--skin-color)"></i>Tỉnh/Thành phố
                            {{!-- <ul class="aside__nav-child">
                                {{#each locations}}
                                <label class="province-option">
                                    <input type="radio" name="province" value="{{this.province}}" {{#compareProperties ../order 'province' 'province'}}checked{{/compareProperties}}>
                                    {{this.province}}
                                </label>
                                {{/each}}
                            </ul> --}}
                            <div class="wrapper-province extra-wrapper" >
                                
                                <div class="wrapper-province__select-btn">
                                    <span>{{order.province}}</span>
                                    <i class="fa-solid fa-chevron-down"></i>
                                </div>
                                <div class="wrapper-province__content">
                                    <div class="warapper-province__search">
                                        <i class="fa-solid fa-magnifying-glass"></i>
                                        <input class="wrapper-province__input" spellcheck="false" type="text" placeholder="Tìm kiếm" name="province">
                                    </div>
                                    <ul class="wrapper-province__options"></ul>
                                </div>
                            </div>
                        </a>
                    </li>
                    <li class="aside__item">
                        <a href="#!">
                           <i class="fa fa-map-marker-alt" style="margin-right:5px;color:var(--skin-color)"></i>Quận/ Huyện
                            <ul class="aside__nav-child">
                                {{!-- <label class="district-option">
                                    <input type="radio" name="district" value="{{order.district}}" checked>
                                    {{order.district}}
                                </label> --}}
                                <div class="wrapper-district extra-district extra-district-short" style="margin:0;">
                                    <div class="wrapper-district__select-btn extra-short">
                                        <span style="white-space:nowrap">Chọn Quận</span>
                                        <i class="fa-solid fa-chevron-down"></i>
                                    </div>
                                    <div class="wrapper-district__content" style="position:relative;">
                                        <div class="warapper-district__search" style="display:flex; gap:5px;">
                                            <input name="district" class="wrapper-district__input" spellcheck="false" type="text" placeholder="Tìm kiếm"
                                                style="width:100%">
                                            <i class="fa-solid fa-magnifying-glass"></i>
                                        </div>
                                        <ul class="wrapper-district__options"></ul>
                                    </div>
                                </div>
                            </ul>
                        </a>
                    </li>
                    <li class="aside__item">
                        <input type="hidden" name="helperId" value="">
                        <input type="hidden" name="requestType" value="Ngắn hạn">
                    </li>
                </ul>
           </form>
        </div>
        {{!-- aside end --}}
        {{!-- main content start --}}
        <div class="main-content">
            {{!-- home section start --}}
            <section class="home home-active section" id="home">
                <div class="home__container-2" style="padding-top:15px;">
                    <div class="home__row-2">
                       <div class="short-helper">
                        <div class="short-helper__heading" style="font-size:1.6rem">
                           <div class="short-helper__heading-left">
                                <i class="fa fa-list" style="margin-right:10px"></i>Danh sách người giúp việc
                                <button class="short-helper__btn">
                                    <i class="fa fa-user"></i>
                                    <span>0</span>
                                </button>
                           </div>
                            <div class="short-helper__heading-right">
                                <button onclick="showPopupShort()" class="btn btn-primary" style="margin-left:auto;background-color:var(--skin-color);color:var(--white)">
                                    <i class="fa fa-shopping-cart" style="margin-right:5px;color:var(--white)"></i>Yêu cầu người giúp việc
                                </button>
                                <div class="overlay-short" id="overlay-short"></div>
                                <div class="short-popup">
                                    <h2>Yêu cầu người giúp việc</h2>
                                    <p>Bạn vẫn chưa chọn người giúp việc</p>
                                    <button type="button" class="short-popup__btn" id="short-popup__btn" onclick="hidePopupShort()">
                                        OK
                                    </button>
                                </div>
                            </div>
                        </div>
                       </div>
                    {{#if helpers}}
                       <div class="short-helper__list" style="flex: 0 0 100%;
                                        max-width: 100%;
                                        margin-top: 15px;">
                    {{#each helpers}}
                       <div class="short-helper__item">
                        <div class="home__row-2 extra-flex" style="margin-left:0px;margin-right:0px">
                            <div class="short-helper__item--image" style="flex:0 0 25%; max-width:25%; ">
                               <a href="/helper/{{this._id}}"> <img src="{{this.avatar}}" alt="{{this._id}}"  style="min-width: 100px; max-height:200px;object-fit:cover" class="short-helper__img-portrait"></a>
                            </div>
                            <div class="short-helper__item--helper" style="flex: 1; padding: 15px;">
                                {{!-- Tên người giúp việc --}}
                                <div class="short-helper__item--helper-name">
                                    <h1 style="font-size: clamp(1.5rem, 2vw, 2rem); margin-bottom: 15px;">{{fullName}}</h1>
                                </div>

                                {{!-- Thông tin cơ bản --}}
                                <div class="helper-info-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; margin-bottom: 15px;">
                                    {{!-- Cột trái --}}
                                    <div class="info-column">
                                        <div class="info-item" style="margin-bottom: 10px;">
                                            <i class="fa fa-map-marker-alt" style="color:var(--skin-color); width: 20px;"></i>
                                            <span style="font-size: clamp(0.9rem, 1.5vw, 1.1rem);">{{birthPlace}}</span>
                                        </div>
                                    </div>

                                    {{!-- Cột phải --}}
                                    <div class="info-column">
                                        <div class="info-row" style="display: flex; gap: 15px; margin-bottom: 10px;">
                                            <div class="info-item" style="flex: 1;">
                                                <i class="fa fa-venus-mars" style="color:var(--skin-color); width: 20px;"></i>
                                                <span style="font-size: clamp(0.9rem, 1.5vw, 1.1rem);">{{gender}}</span>
                                            </div>
                                            <div class="info-item" style="flex: 1;">
                                                <i class="fa fa-birthday-cake" style="color:var(--skin-color); width: 20px;"></i>
                                                <span style="font-size: clamp(0.9rem, 1.5vw, 1.1rem);">{{#getAge this.birthDate}}{{/getAge}}</span>
                                            </div>
                                        </div>

                                        <div class="info-row" style="display: flex; gap: 15px;">
                                            <div class="info-item" style="flex: 1;">
                                                <i class="fa fa-briefcase" style="color:var(--skin-color); width: 20px;"></i>
                                                <span style="font-size: clamp(0.9rem, 1.5vw, 1.1rem); white-space: nowrap;">{{yearOfExperience}} năm kinh nghiệm</span>
                                            </div>
                                            <div class="info-item" style="flex: 1;">
                                                <i class="fa fa-map-marker-alt" style="color:var(--skin-color); width: 20px;"></i>
                                                <span style="font-size: clamp(0.9rem, 1.5vw, 1.1rem);">
                                                    {{#each workingArea.districts}}
                                                        {{this}}
                                                    {{/each}}
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                {{!-- Sở trường --}}
                                <div class="helper-preferences" style="margin-bottom: 15px;">
                                    <div class="preference-header" style="margin-bottom: 10px;">
                                        <i class="fa fa-tags" style="color:var(--skin-color); margin-right: 5px;"></i>
                                        <span style="font-size: clamp(0.9rem, 1.5vw, 1.1rem);">Sở trường</span>
                                    </div>
                                    <div class="helper-box__list" style="display: flex; flex-wrap: wrap; gap: 10px;">
                                        {{#each ../services}}
                                            {{#each ../this.jobs}}
                                                {{#isEquals ../this._id this}}
                                                <div class="helper-box" style="background: var(--skin-color); color: white; padding: 5px 10px; border-radius: 5px; font-size: clamp(0.8rem, 1.2vw, 1rem);">
                                                    <span>Osin part Time</span>
                                                </div>
                                                {{/isEquals}}
                                            {{/each}}
                                        {{/each}}
                                    </div>
                                </div>

                                {{!-- Nút chi tiết --}}
                                <div class="short-helper__item--helper-detail" style="display: flex; justify-content: center;">
                                    <button class="btn" style="background-color:var(--skin-color); color:var(--white); padding: 8px 15px; border-radius: 5px; font-size: clamp(0.9rem, 1.5vw, 1.1rem);">
                                        <i class="fa fa-arrow-right" style="margin-right:5px"></i>Thông tin chi tiết
                                    </button>
                                </div>
                            </div>
                        </div>
                       </div>
                    {{/each}}

                       </div>
                       {{else}}
                       <div class="short-helper__item">
                        <div class="home__row-2" style="margin-left:0px;margin-right:0px">
                            <h1>Không tìm thấy người giúp việc nào</h1>
                        </div>
                       </div>
                       {{/if}}
                       </div>
                       
                    </div>
                </div>
            </section>
            {{!-- home section end --}}
        </div>
        {{!-- main content end --}}
    </div>
    {{!-- main contain end --}}
<script>
    const locations = {{{ json locations }}};
    let districts =[];
    document.addEventListener('DOMContentLoaded', function () {
        const wrapper = document.querySelector(".wrapper-province");
        const selectBtn = wrapper.querySelector(".wrapper-province__select-btn");
        const searchInp = wrapper.querySelector(".wrapper-province__input");
        const options = wrapper.querySelector(".wrapper-province__options");
        const extraWrapper= document.querySelector(".extra-wrapper");
        const extraWrapperDistrict= document.querySelector(".extra-district-short")

        // Kiểm tra xem các element có tồn tại không
        if (!wrapper || !selectBtn || !searchInp || !options) {
            console.error("Không tìm thấy các element cần thiết");
            return;
        }

       let countries = {{{ json locations }}}.map(location => location.Name);
       
        
        let orderTest = {{{json order}}};
        console.log(orderTest)
        function addCountry(selectedCountry) {
            options.innerHTML = "";
            countries.forEach((country,index) => {
                let isSelected = country == selectedCountry ? "selected" : "";
                let li = `<li onclick="updateName(this, ${index})" class="${isSelected}">${country}</li>`;
                options.insertAdjacentHTML("beforeend", li);
            });
        }

        function updateName(selectedLi,selectedIndex) {
            searchInp.value = selectedLi.innerText;
            addCountry(selectedLi.innerText);
            wrapper.classList.remove("active-menu-search");
            selectBtn.firstElementChild.innerText = selectedLi.innerText;
             districts = [];

            for (let i = 1; i < locations[selectedIndex].Districts.length; i++) {
                let districtName;
                console.log(districtName);
                districts.push(locations[selectedIndex].Districts[i].Name.replace(/(Huyện|Quận) /g, ''));
            }
            console.log(districts);
            makeWrapperDistrict(districts, selectedLi);
        }

        // Đưa updateName vào global scope để onclick có thể truy cập
        window.updateName = updateName;

        searchInp.addEventListener("keyup", () => {
            let arr = [];
            let searchWord = searchInp.value.toLowerCase();
            arr = countries.filter(data => {
                return data.toLowerCase().startsWith(searchWord);
            }).map(data => {
                let isSelected = data == selectBtn.firstElementChild.innerText ? "selected" : "";
                return `<li onclick="updateName(this)" class="${isSelected}">${data}</li>`;
            }).join("");
            options.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
        });

        selectBtn.addEventListener("click", () => extraWrapper.classList.toggle("active-menu-search"));

        // Khởi tạo danh sách ban đầu
        addCountry();
    });
     const wrapper_district = document.querySelector(".wrapper-district");
        console.log(wrapper_district);
        const selectBtn_district = wrapper_district.querySelector(".wrapper-district__select-btn");
        console.log(selectBtn_district);
        const searchInp_district = wrapper_district.querySelector(".wrapper-district__input");
        console.log(searchInp_district);
        const options_district = wrapper_district.querySelector(".wrapper-district__options");
     function makeWrapperDistrict(districts, selectedLi) {
            console.log(1);
            selectBtn_district.firstElementChild.innerText = districts[0];
            searchInp_district.value = districts[0];
            // Kiểm tra xem các element có tồn tại không
            if (!wrapper_district || !selectBtn_district || !searchInp_district || !options_district) {
                console.error("Không tìm thấy các element cần thiết");
                return;
            }

            console.log(districts);
            function addCountry_district(selectedCountry) {
                options_district.innerHTML = "";
                districts.forEach((country, index) => {
                    let isSelected = country == selectedCountry ? "selected" : "";
                    let li = `<li onclick="updateName_district(this, ${index})" class="${isSelected}">${country}</li>`;
                    options_district.insertAdjacentHTML("beforeend", li);
                });
            }

            function updateName_district(selectedLi, selectedIndex) {

                searchInp_district.value = selectedLi.innerText;
                addCountry_district(selectedLi.innerText);
                wrapper_district.classList.remove("active-menu-search");
                console.log(selectedLi);
                selectBtn_district.firstElementChild.innerText = selectedLi.innerText;
                console.log("Selected index:", selectedIndex); // Log ra index
            }

            // Đưa updateName vào global scope để onclick có thể truy cập
            window.updateName_district = updateName_district;

            searchInp_district.addEventListener("keyup", () => {
                let arr = [];
                let searchWord = searchInp_district.value.toLowerCase();
                arr = districts.filter((data, index) => {
                    return data.toLowerCase().startsWith(searchWord);
                }).map((data, index) => {
                    let isSelected = data == selectBtn_district.firstElementChild.innerText ? "selected" : "";
                    return `<li onclick="updateName_district(this, ${index})" class="${isSelected}">${data}</li>`;
                }).join("");
                options_district.innerHTML = arr ? arr : `<p style="margin-top: 10px;">Oops! tỉnh không tồn tại</p>`;
            });


            // Khởi tạo danh sách ban đầu
            addCountry_district();
        }
        selectBtn_district.addEventListener("click", (e) => {
            e.stopPropagation(); // Ngăn event bubbling
           wrapper_district.classList.toggle("active-menu-search");
            console.log("District button clicked"); // Debug log);
        })
</script>
<script>
    const helperItems= document.querySelectorAll('.short-helper__item');
    const numHelper = document.querySelector('.short-helper__btn span');
    const helperInput = document.querySelector('input[name="helperId"]')
    const submitBtn= document.querySelector('.btn.btn-primary')
    const submitForm=document.querySelector('form');
    submitBtn.onclick =function(){
        if(helperInput.value==""){
            return;
        }
        submitForm.method="get";
        submitForm.action="/request";
        submitForm.submit();
    }
    for(let key in helperItems){
        helperItems[key].onclick = function(){
            let id=this.querySelector(".short-helper__img-portrait").alt;
            for(let i in helperItems){
                if(i==key){
                    helperItems[i].classList.add('selected');
                    numHelper.innerHTML='1'
                    helperInput.value= id;
                }
                else{
                    helperItems[i].classList.remove('selected');
                }
            }
        }
    }
    
</script>


   
    <script>
        let shortPopup = document.querySelector(".short-popup");
        let shortPopupBtn = document.querySelector("#short-popup__btn");
        let overlayShort = document.querySelector(".overlay-short");
        let aside = document.querySelector(".aside");
        function showPopupShort(){
            aside.style.zIndex = "2";
            overlayShort.classList.add("active");
            shortPopup.classList.add("open-popup__short");
        }
        function hidePopupShort(){
            aside.style.zIndex = "10";
            overlayShort.classList.remove("active");
            shortPopup.classList.remove("open-popup__short");
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        flatpickr("#myID1", {
            enableTime: true,
            noCalendar: true,
            dateFormat: "H:i",
            conjunction: " :: ",
            minTime: "06:00",
            maxTime: "20:00",
        });
        flatpickr("#myID", {
            minDate: "today",
            mode: "multiple",
            dateFormat: "Y-m-d",
            conjunction: " :: "
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/typed.js/2.1.0/typed.umd.js"
        integrity="sha512-+2pW8xXU/rNr7VS+H62aqapfRpqFwnSQh9ap6THjsm41AxgA0MhFRtfrABS+Lx2KHJn82UOrnBKhjZOXpom2LQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
       
        //aside
        const nav = document.querySelector(".aside__nav"),
            navList = nav.querySelectorAll(".aside__item"),
            totalNavList = navList.length,
            allSection = document.querySelectorAll(".section"), totalSection = allSection.length;
        for (let i = 0; i < totalNavList; i++) {

            const a = navList[i].querySelector("a");
            a.addEventListener("click", function () {
                console.log(this);
                removeBackSection();
                for (let j = 0; j < totalNavList; j++) {
                    if (navList[j].querySelector("a").classList.contains("aside__nav-active")) {
                        addBackSection(j);
                        //allSection[j].classList.add("back-section");
                    }
                    navList[j].querySelector("a").classList.remove("aside__nav-active");
                }
                this.classList.add("aside__nav-active");
                showSection(this);
                if (window.innerWidth < 1200) {
                    asideSectionToggleBtn();
                }
            })
        }
        function addBackSection(num) {
            allSection[num].classList.add("back-section");
        }
        function removeBackSection() {
            for (let i = 0; i < totalSection; i++) {
                allSection[i].classList.remove("back-section");
            }
        }
        function showSection(element) {
            for (let i = 0; i < totalSection; i++) {
                allSection[i].classList.remove("home-active");
            }
            const target = element.getAttribute("href").split("#")[1];
            console.log(target);
            document.querySelector("#" + target).classList.add("home-active");

        }
        function updateNav(element) {
            console.log(element.getAttribute("href").split("#")[1]);
            for (let i = 0; i < totalSection; i++) {
                navList[i].querySelector("a").classList.remove("aside__nav-active");
                const target = element.getAttribute("href").split("#")[1];
                if (target === navList[i].querySelector("a").getAttribute("href").split("#")[1]) {
                    navList[i].querySelector("a").classList.add("aside__nav-active");
                }
            }


        }
        document.querySelector('.hire-me').addEventListener("click", function () {
            console.log(this);
            const sectionIndex = this.getAttribute("data-section-index");
            console.log(sectionIndex);
            showSection(this);
            updateNav(this);
            removeBackSection();
            addBackSection(sectionIndex);
        })
        document.querySelector('.book-helper').addEventListener("click", function () {
            console.log(this);
            const sectionIndex = this.getAttribute("data-section-index");
            console.log(sectionIndex);
            showSection(this);
            updateNav(this);
            removeBackSection();
            addBackSection(sectionIndex);
        })
        document.querySelector('.book-helper').addEventListener("click", function () {
            console.log(this);
            const sectionIndex = this.getAttribute("data-section-index");
            console.log(sectionIndex);
            showSection(this);
            updateNav(this);
            removeBackSection();
            addBackSection(sectionIndex);
        })
        document.querySelector('.book-helper__cancel').addEventListener("click", function () {
            console.log(this);
            const sectionIndex = this.getAttribute("data-section-index");
            console.log(sectionIndex);
            showSection(this);
            updateNav(this);
            removeBackSection();
            addBackSection(sectionIndex);
        })
        const navToggleBtn = document.querySelector('.aside__nav-toggle'), aside = document.querySelector(".aside");
        navToggleBtn.addEventListener("click", () => {
            asideSectionToggleBtn();
        })
        function asideSectionToggleBtn() {
            aside.classList.toggle("open");
            navToggleBtn.classList.toggle("open");
            for (let i = 0; i < totalSection; i++) {
                allSection[i].classList.toggle('open');
            }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

    <!-- Initialize Swiper -->
    <script>
        var swiper = new Swiper(".mySwiper--slideshow", {
            slidesPerView: 1,
            slidesPerGroup: 1,
            centeredSlides: true,
            grabCursor: true,
            loop: true,
            navigation: {
                nextEl: ".swiper-button-next",
                prevEl: ".swiper-button-prev",
            },
            pagination: {
                clickable: true,
            },
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script>
        var swiper = new Swiper(".mySwiper", {
            slidesPerView: "3",
            spaceBetween: 150,
            centeredSlides: true,
            grabCursor: true,
            loop: true,
            pagination: {
                el: ".swiper-pagination",
                clickable: true,
            },
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
        crossorigin="anonymous"></script>
    <script>
        window.dispatchEvent(new Event("template-loaded"));
    </script>
    <script src="/js/app.js"></script>
    
    <script>
        // điều mình mong muốn
        validator({
            form: "#form-1",
            errorElement: ".form__error",
            formGroupElement: ".form__group",
            rules: [
                validator.isRequire("#tel-input", "Bạn chưa nhập gì hết"),
                validator.isPhone("#tel-input", "vui lòng nhập đúng định dạng của số điện thoại"),
                //validator.isRequire("#password", "You haven't entered yet."),
                //validator.isMInPassword("#password", 6, "the password enter at least 6 characters"),
            ],
            onsubmit: function (data) {
                console.log(data);
            }
        })
        validator({
            form: "#form-2",
            errorElement: ".form__error",
            formGroupElement: ".form__group",
            rules: [
                validator.isRequire("#full-name-input", "Bạn chưa nhập gì hết"),
                validator.isRequire("#address-input", "Bạn chưa nhập gì hết"),
                validator.isRequire("#city-input", "Bạn chưa nhập gì hết"),
                validator.isRequire("#district-input", "Bạn chưa nhập gì hết"),


                //validator.isRequire("#password", "You haven't entered yet."),
                //validator.isMInPassword("#password", 6, "the password enter at least 6 characters"),
            ],
            onsubmit: function (data) {
                console.log(data);
            }
        })
    </script>
    <script>
        window.dispatchEvent(new Event("template-loaded"));
    </script>
    <script>
        // Aside navigation handling
        document.addEventListener('DOMContentLoaded', function() {
            const nav = document.querySelector(".aside__nav"),
                  navList = nav.querySelectorAll(".aside__item"),
                  navToggleBtn = document.querySelector('.aside__nav-toggle'),
                  aside = document.querySelector(".aside");

            // Add click handlers to nav items
            navList.forEach(item => {
                const link = item.querySelector("a");
                if (!link) return;

                link.addEventListener("click", function(e) {
                    // Prevent default only if href is #!
                    if (this.getAttribute("href") === "#!") {
                        e.preventDefault();
                    }

                    // Remove active class from all nav items
                    navList.forEach(navItem => {
                        const navLink = navItem.querySelector("a");
                        if (navLink) {
                            navLink.classList.remove("aside__nav-active");
                        }
                    });

                    // Add active class to clicked item
                    this.classList.add("aside__nav-active");
                    
                    // Không tự động đóng aside khi click vào nav items nữa
                });
            });

            // Toggle button handler (nút X)
            if (navToggleBtn) {
                navToggleBtn.addEventListener("click", toggleAside);
            }

            // Aside toggle function
            function toggleAside() {
                aside.classList.toggle("open");
                if (navToggleBtn) {
                    navToggleBtn.classList.toggle("open");
                }
            }
        });
    </script>
    <script src="/js/app.js"></script>
    
    <script>
        // điều mình mong muốn
        validator({
            form: "#form-1",
            errorElement: ".form__error",
            formGroupElement: ".form__group",
            rules: [
                validator.isRequire("#tel-input", "Bạn chưa nhập gì hết"),
                validator.isPhone("#tel-input", "vui lòng nhập đúng định dạng của số điện thoại"),
                //validator.isRequire("#password", "You haven't entered yet."),
                //validator.isMInPassword("#password", 6, "the password enter at least 6 characters"),
            ],
            onsubmit: function (data) {
                console.log(data);
            }
        })
        validator({
            form: "#form-2",
            errorElement: ".form__error",
            formGroupElement: ".form__group",
            rules: [
                validator.isRequire("#full-name-input", "Bạn chưa nhập gì hết"),
                validator.isRequire("#address-input", "Bạn chưa nhập gì hết"),
                validator.isRequire("#city-input", "Bạn chưa nhập gì hết"),
                validator.isRequire("#district-input", "Bạn chưa nhập gì hết"),


                //validator.isRequire("#password", "You haven't entered yet."),
                //validator.isMInPassword("#password", 6, "the password enter at least 6 characters"),
            ],
            onsubmit: function (data) {
                console.log(data);
            }
        })
    </script>
    <script>
        window.dispatchEvent(new Event("template-loaded"));
    </script>
</body>

</html>